//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DALMomburbia {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MOMDataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MOMDataset : global::System.Data.DataSet {
        
        private MOM_USRDataTable tableMOM_USR;
        
        private MOM_FRND_RQSTDataTable tableMOM_FRND_RQST;
        
        private MOM_FRNDDataTable tableMOM_FRND;
        
        private MOM_ANWSDataTable tableMOM_ANWS;
        
        private MOM_CATGDataTable tableMOM_CATG;
        
        private MOM_USR_QSTNDataTable tableMOM_USR_QSTN;
        
        private MOM_USR_ANWSDataTable tableMOM_USR_ANWS;
        
        private MOM_QSTNDataTable tableMOM_QSTN;
        
        private MOM_IP_TRKDataTable tableMOM_IP_TRK;
        
        private MOM_FRG_SHAREDDataTable tableMOM_FRG_SHARED;
        
        private MOM_FRG_CMNTDataTable tableMOM_FRG_CMNT;
        
        private MOM_FRG_CMNT_SHAREDDataTable tableMOM_FRG_CMNT_SHARED;
        
        private MOM_IMPT_EMAILDataTable tableMOM_IMPT_EMAIL;
        
        private MOM_GRPDataTable tableMOM_GRP;
        
        private MOM_GRP_USRDataTable tableMOM_GRP_USR;
        
        private MOM_BLGDataTable tableMOM_BLG;
        
        private MOM_USR_BLGDataTable tableMOM_USR_BLG;
        
        private MOM_USR_FRNDDataTable tableMOM_USR_FRND;
        
        private MOM_RCPDataTable tableMOM_RCP;
        
        private MOM_RCP_CMTDataTable tableMOM_RCP_CMT;
        
        private MOM_RCP_RTDataTable tableMOM_RCP_RT;
        
        private MOM_RCP_VIEWDataTable tableMOM_RCP_VIEW;
        
        private MOM_FRGDataTable tableMOM_FRG;
        
        private MOM_FAV_RCPDataTable tableMOM_FAV_RCP;
        
        private MOM_RCP_SEARCHDataTable tableMOM_RCP_SEARCH;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MOMDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MOMDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MOM_USR"] != null)) {
                    base.Tables.Add(new MOM_USRDataTable(ds.Tables["MOM_USR"]));
                }
                if ((ds.Tables["MOM_FRND_RQST"] != null)) {
                    base.Tables.Add(new MOM_FRND_RQSTDataTable(ds.Tables["MOM_FRND_RQST"]));
                }
                if ((ds.Tables["MOM_FRND"] != null)) {
                    base.Tables.Add(new MOM_FRNDDataTable(ds.Tables["MOM_FRND"]));
                }
                if ((ds.Tables["MOM_ANWS"] != null)) {
                    base.Tables.Add(new MOM_ANWSDataTable(ds.Tables["MOM_ANWS"]));
                }
                if ((ds.Tables["MOM_CATG"] != null)) {
                    base.Tables.Add(new MOM_CATGDataTable(ds.Tables["MOM_CATG"]));
                }
                if ((ds.Tables["MOM_USR_QSTN"] != null)) {
                    base.Tables.Add(new MOM_USR_QSTNDataTable(ds.Tables["MOM_USR_QSTN"]));
                }
                if ((ds.Tables["MOM_USR_ANWS"] != null)) {
                    base.Tables.Add(new MOM_USR_ANWSDataTable(ds.Tables["MOM_USR_ANWS"]));
                }
                if ((ds.Tables["MOM_QSTN"] != null)) {
                    base.Tables.Add(new MOM_QSTNDataTable(ds.Tables["MOM_QSTN"]));
                }
                if ((ds.Tables["MOM_IP_TRK"] != null)) {
                    base.Tables.Add(new MOM_IP_TRKDataTable(ds.Tables["MOM_IP_TRK"]));
                }
                if ((ds.Tables["MOM_FRG_SHARED"] != null)) {
                    base.Tables.Add(new MOM_FRG_SHAREDDataTable(ds.Tables["MOM_FRG_SHARED"]));
                }
                if ((ds.Tables["MOM_FRG_CMNT"] != null)) {
                    base.Tables.Add(new MOM_FRG_CMNTDataTable(ds.Tables["MOM_FRG_CMNT"]));
                }
                if ((ds.Tables["MOM_FRG_CMNT_SHARED"] != null)) {
                    base.Tables.Add(new MOM_FRG_CMNT_SHAREDDataTable(ds.Tables["MOM_FRG_CMNT_SHARED"]));
                }
                if ((ds.Tables["MOM_IMPT_EMAIL"] != null)) {
                    base.Tables.Add(new MOM_IMPT_EMAILDataTable(ds.Tables["MOM_IMPT_EMAIL"]));
                }
                if ((ds.Tables["MOM_GRP"] != null)) {
                    base.Tables.Add(new MOM_GRPDataTable(ds.Tables["MOM_GRP"]));
                }
                if ((ds.Tables["MOM_GRP_USR"] != null)) {
                    base.Tables.Add(new MOM_GRP_USRDataTable(ds.Tables["MOM_GRP_USR"]));
                }
                if ((ds.Tables["MOM_BLG"] != null)) {
                    base.Tables.Add(new MOM_BLGDataTable(ds.Tables["MOM_BLG"]));
                }
                if ((ds.Tables["MOM_USR_BLG"] != null)) {
                    base.Tables.Add(new MOM_USR_BLGDataTable(ds.Tables["MOM_USR_BLG"]));
                }
                if ((ds.Tables["MOM_USR_FRND"] != null)) {
                    base.Tables.Add(new MOM_USR_FRNDDataTable(ds.Tables["MOM_USR_FRND"]));
                }
                if ((ds.Tables["MOM_RCP"] != null)) {
                    base.Tables.Add(new MOM_RCPDataTable(ds.Tables["MOM_RCP"]));
                }
                if ((ds.Tables["MOM_RCP_CMT"] != null)) {
                    base.Tables.Add(new MOM_RCP_CMTDataTable(ds.Tables["MOM_RCP_CMT"]));
                }
                if ((ds.Tables["MOM_RCP_RT"] != null)) {
                    base.Tables.Add(new MOM_RCP_RTDataTable(ds.Tables["MOM_RCP_RT"]));
                }
                if ((ds.Tables["MOM_RCP_VIEW"] != null)) {
                    base.Tables.Add(new MOM_RCP_VIEWDataTable(ds.Tables["MOM_RCP_VIEW"]));
                }
                if ((ds.Tables["MOM_FRG"] != null)) {
                    base.Tables.Add(new MOM_FRGDataTable(ds.Tables["MOM_FRG"]));
                }
                if ((ds.Tables["MOM_FAV_RCP"] != null)) {
                    base.Tables.Add(new MOM_FAV_RCPDataTable(ds.Tables["MOM_FAV_RCP"]));
                }
                if ((ds.Tables["MOM_RCP_SEARCH"] != null)) {
                    base.Tables.Add(new MOM_RCP_SEARCHDataTable(ds.Tables["MOM_RCP_SEARCH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_USRDataTable MOM_USR {
            get {
                return this.tableMOM_USR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_FRND_RQSTDataTable MOM_FRND_RQST {
            get {
                return this.tableMOM_FRND_RQST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_FRNDDataTable MOM_FRND {
            get {
                return this.tableMOM_FRND;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_ANWSDataTable MOM_ANWS {
            get {
                return this.tableMOM_ANWS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_CATGDataTable MOM_CATG {
            get {
                return this.tableMOM_CATG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_USR_QSTNDataTable MOM_USR_QSTN {
            get {
                return this.tableMOM_USR_QSTN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_USR_ANWSDataTable MOM_USR_ANWS {
            get {
                return this.tableMOM_USR_ANWS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_QSTNDataTable MOM_QSTN {
            get {
                return this.tableMOM_QSTN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_IP_TRKDataTable MOM_IP_TRK {
            get {
                return this.tableMOM_IP_TRK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_FRG_SHAREDDataTable MOM_FRG_SHARED {
            get {
                return this.tableMOM_FRG_SHARED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_FRG_CMNTDataTable MOM_FRG_CMNT {
            get {
                return this.tableMOM_FRG_CMNT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_FRG_CMNT_SHAREDDataTable MOM_FRG_CMNT_SHARED {
            get {
                return this.tableMOM_FRG_CMNT_SHARED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_IMPT_EMAILDataTable MOM_IMPT_EMAIL {
            get {
                return this.tableMOM_IMPT_EMAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_GRPDataTable MOM_GRP {
            get {
                return this.tableMOM_GRP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_GRP_USRDataTable MOM_GRP_USR {
            get {
                return this.tableMOM_GRP_USR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_BLGDataTable MOM_BLG {
            get {
                return this.tableMOM_BLG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_USR_BLGDataTable MOM_USR_BLG {
            get {
                return this.tableMOM_USR_BLG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_USR_FRNDDataTable MOM_USR_FRND {
            get {
                return this.tableMOM_USR_FRND;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_RCPDataTable MOM_RCP {
            get {
                return this.tableMOM_RCP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_RCP_CMTDataTable MOM_RCP_CMT {
            get {
                return this.tableMOM_RCP_CMT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_RCP_RTDataTable MOM_RCP_RT {
            get {
                return this.tableMOM_RCP_RT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_RCP_VIEWDataTable MOM_RCP_VIEW {
            get {
                return this.tableMOM_RCP_VIEW;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_FRGDataTable MOM_FRG {
            get {
                return this.tableMOM_FRG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_FAV_RCPDataTable MOM_FAV_RCP {
            get {
                return this.tableMOM_FAV_RCP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOM_RCP_SEARCHDataTable MOM_RCP_SEARCH {
            get {
                return this.tableMOM_RCP_SEARCH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MOMDataset cln = ((MOMDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MOM_USR"] != null)) {
                    base.Tables.Add(new MOM_USRDataTable(ds.Tables["MOM_USR"]));
                }
                if ((ds.Tables["MOM_FRND_RQST"] != null)) {
                    base.Tables.Add(new MOM_FRND_RQSTDataTable(ds.Tables["MOM_FRND_RQST"]));
                }
                if ((ds.Tables["MOM_FRND"] != null)) {
                    base.Tables.Add(new MOM_FRNDDataTable(ds.Tables["MOM_FRND"]));
                }
                if ((ds.Tables["MOM_ANWS"] != null)) {
                    base.Tables.Add(new MOM_ANWSDataTable(ds.Tables["MOM_ANWS"]));
                }
                if ((ds.Tables["MOM_CATG"] != null)) {
                    base.Tables.Add(new MOM_CATGDataTable(ds.Tables["MOM_CATG"]));
                }
                if ((ds.Tables["MOM_USR_QSTN"] != null)) {
                    base.Tables.Add(new MOM_USR_QSTNDataTable(ds.Tables["MOM_USR_QSTN"]));
                }
                if ((ds.Tables["MOM_USR_ANWS"] != null)) {
                    base.Tables.Add(new MOM_USR_ANWSDataTable(ds.Tables["MOM_USR_ANWS"]));
                }
                if ((ds.Tables["MOM_QSTN"] != null)) {
                    base.Tables.Add(new MOM_QSTNDataTable(ds.Tables["MOM_QSTN"]));
                }
                if ((ds.Tables["MOM_IP_TRK"] != null)) {
                    base.Tables.Add(new MOM_IP_TRKDataTable(ds.Tables["MOM_IP_TRK"]));
                }
                if ((ds.Tables["MOM_FRG_SHARED"] != null)) {
                    base.Tables.Add(new MOM_FRG_SHAREDDataTable(ds.Tables["MOM_FRG_SHARED"]));
                }
                if ((ds.Tables["MOM_FRG_CMNT"] != null)) {
                    base.Tables.Add(new MOM_FRG_CMNTDataTable(ds.Tables["MOM_FRG_CMNT"]));
                }
                if ((ds.Tables["MOM_FRG_CMNT_SHARED"] != null)) {
                    base.Tables.Add(new MOM_FRG_CMNT_SHAREDDataTable(ds.Tables["MOM_FRG_CMNT_SHARED"]));
                }
                if ((ds.Tables["MOM_IMPT_EMAIL"] != null)) {
                    base.Tables.Add(new MOM_IMPT_EMAILDataTable(ds.Tables["MOM_IMPT_EMAIL"]));
                }
                if ((ds.Tables["MOM_GRP"] != null)) {
                    base.Tables.Add(new MOM_GRPDataTable(ds.Tables["MOM_GRP"]));
                }
                if ((ds.Tables["MOM_GRP_USR"] != null)) {
                    base.Tables.Add(new MOM_GRP_USRDataTable(ds.Tables["MOM_GRP_USR"]));
                }
                if ((ds.Tables["MOM_BLG"] != null)) {
                    base.Tables.Add(new MOM_BLGDataTable(ds.Tables["MOM_BLG"]));
                }
                if ((ds.Tables["MOM_USR_BLG"] != null)) {
                    base.Tables.Add(new MOM_USR_BLGDataTable(ds.Tables["MOM_USR_BLG"]));
                }
                if ((ds.Tables["MOM_USR_FRND"] != null)) {
                    base.Tables.Add(new MOM_USR_FRNDDataTable(ds.Tables["MOM_USR_FRND"]));
                }
                if ((ds.Tables["MOM_RCP"] != null)) {
                    base.Tables.Add(new MOM_RCPDataTable(ds.Tables["MOM_RCP"]));
                }
                if ((ds.Tables["MOM_RCP_CMT"] != null)) {
                    base.Tables.Add(new MOM_RCP_CMTDataTable(ds.Tables["MOM_RCP_CMT"]));
                }
                if ((ds.Tables["MOM_RCP_RT"] != null)) {
                    base.Tables.Add(new MOM_RCP_RTDataTable(ds.Tables["MOM_RCP_RT"]));
                }
                if ((ds.Tables["MOM_RCP_VIEW"] != null)) {
                    base.Tables.Add(new MOM_RCP_VIEWDataTable(ds.Tables["MOM_RCP_VIEW"]));
                }
                if ((ds.Tables["MOM_FRG"] != null)) {
                    base.Tables.Add(new MOM_FRGDataTable(ds.Tables["MOM_FRG"]));
                }
                if ((ds.Tables["MOM_FAV_RCP"] != null)) {
                    base.Tables.Add(new MOM_FAV_RCPDataTable(ds.Tables["MOM_FAV_RCP"]));
                }
                if ((ds.Tables["MOM_RCP_SEARCH"] != null)) {
                    base.Tables.Add(new MOM_RCP_SEARCHDataTable(ds.Tables["MOM_RCP_SEARCH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMOM_USR = ((MOM_USRDataTable)(base.Tables["MOM_USR"]));
            if ((initTable == true)) {
                if ((this.tableMOM_USR != null)) {
                    this.tableMOM_USR.InitVars();
                }
            }
            this.tableMOM_FRND_RQST = ((MOM_FRND_RQSTDataTable)(base.Tables["MOM_FRND_RQST"]));
            if ((initTable == true)) {
                if ((this.tableMOM_FRND_RQST != null)) {
                    this.tableMOM_FRND_RQST.InitVars();
                }
            }
            this.tableMOM_FRND = ((MOM_FRNDDataTable)(base.Tables["MOM_FRND"]));
            if ((initTable == true)) {
                if ((this.tableMOM_FRND != null)) {
                    this.tableMOM_FRND.InitVars();
                }
            }
            this.tableMOM_ANWS = ((MOM_ANWSDataTable)(base.Tables["MOM_ANWS"]));
            if ((initTable == true)) {
                if ((this.tableMOM_ANWS != null)) {
                    this.tableMOM_ANWS.InitVars();
                }
            }
            this.tableMOM_CATG = ((MOM_CATGDataTable)(base.Tables["MOM_CATG"]));
            if ((initTable == true)) {
                if ((this.tableMOM_CATG != null)) {
                    this.tableMOM_CATG.InitVars();
                }
            }
            this.tableMOM_USR_QSTN = ((MOM_USR_QSTNDataTable)(base.Tables["MOM_USR_QSTN"]));
            if ((initTable == true)) {
                if ((this.tableMOM_USR_QSTN != null)) {
                    this.tableMOM_USR_QSTN.InitVars();
                }
            }
            this.tableMOM_USR_ANWS = ((MOM_USR_ANWSDataTable)(base.Tables["MOM_USR_ANWS"]));
            if ((initTable == true)) {
                if ((this.tableMOM_USR_ANWS != null)) {
                    this.tableMOM_USR_ANWS.InitVars();
                }
            }
            this.tableMOM_QSTN = ((MOM_QSTNDataTable)(base.Tables["MOM_QSTN"]));
            if ((initTable == true)) {
                if ((this.tableMOM_QSTN != null)) {
                    this.tableMOM_QSTN.InitVars();
                }
            }
            this.tableMOM_IP_TRK = ((MOM_IP_TRKDataTable)(base.Tables["MOM_IP_TRK"]));
            if ((initTable == true)) {
                if ((this.tableMOM_IP_TRK != null)) {
                    this.tableMOM_IP_TRK.InitVars();
                }
            }
            this.tableMOM_FRG_SHARED = ((MOM_FRG_SHAREDDataTable)(base.Tables["MOM_FRG_SHARED"]));
            if ((initTable == true)) {
                if ((this.tableMOM_FRG_SHARED != null)) {
                    this.tableMOM_FRG_SHARED.InitVars();
                }
            }
            this.tableMOM_FRG_CMNT = ((MOM_FRG_CMNTDataTable)(base.Tables["MOM_FRG_CMNT"]));
            if ((initTable == true)) {
                if ((this.tableMOM_FRG_CMNT != null)) {
                    this.tableMOM_FRG_CMNT.InitVars();
                }
            }
            this.tableMOM_FRG_CMNT_SHARED = ((MOM_FRG_CMNT_SHAREDDataTable)(base.Tables["MOM_FRG_CMNT_SHARED"]));
            if ((initTable == true)) {
                if ((this.tableMOM_FRG_CMNT_SHARED != null)) {
                    this.tableMOM_FRG_CMNT_SHARED.InitVars();
                }
            }
            this.tableMOM_IMPT_EMAIL = ((MOM_IMPT_EMAILDataTable)(base.Tables["MOM_IMPT_EMAIL"]));
            if ((initTable == true)) {
                if ((this.tableMOM_IMPT_EMAIL != null)) {
                    this.tableMOM_IMPT_EMAIL.InitVars();
                }
            }
            this.tableMOM_GRP = ((MOM_GRPDataTable)(base.Tables["MOM_GRP"]));
            if ((initTable == true)) {
                if ((this.tableMOM_GRP != null)) {
                    this.tableMOM_GRP.InitVars();
                }
            }
            this.tableMOM_GRP_USR = ((MOM_GRP_USRDataTable)(base.Tables["MOM_GRP_USR"]));
            if ((initTable == true)) {
                if ((this.tableMOM_GRP_USR != null)) {
                    this.tableMOM_GRP_USR.InitVars();
                }
            }
            this.tableMOM_BLG = ((MOM_BLGDataTable)(base.Tables["MOM_BLG"]));
            if ((initTable == true)) {
                if ((this.tableMOM_BLG != null)) {
                    this.tableMOM_BLG.InitVars();
                }
            }
            this.tableMOM_USR_BLG = ((MOM_USR_BLGDataTable)(base.Tables["MOM_USR_BLG"]));
            if ((initTable == true)) {
                if ((this.tableMOM_USR_BLG != null)) {
                    this.tableMOM_USR_BLG.InitVars();
                }
            }
            this.tableMOM_USR_FRND = ((MOM_USR_FRNDDataTable)(base.Tables["MOM_USR_FRND"]));
            if ((initTable == true)) {
                if ((this.tableMOM_USR_FRND != null)) {
                    this.tableMOM_USR_FRND.InitVars();
                }
            }
            this.tableMOM_RCP = ((MOM_RCPDataTable)(base.Tables["MOM_RCP"]));
            if ((initTable == true)) {
                if ((this.tableMOM_RCP != null)) {
                    this.tableMOM_RCP.InitVars();
                }
            }
            this.tableMOM_RCP_CMT = ((MOM_RCP_CMTDataTable)(base.Tables["MOM_RCP_CMT"]));
            if ((initTable == true)) {
                if ((this.tableMOM_RCP_CMT != null)) {
                    this.tableMOM_RCP_CMT.InitVars();
                }
            }
            this.tableMOM_RCP_RT = ((MOM_RCP_RTDataTable)(base.Tables["MOM_RCP_RT"]));
            if ((initTable == true)) {
                if ((this.tableMOM_RCP_RT != null)) {
                    this.tableMOM_RCP_RT.InitVars();
                }
            }
            this.tableMOM_RCP_VIEW = ((MOM_RCP_VIEWDataTable)(base.Tables["MOM_RCP_VIEW"]));
            if ((initTable == true)) {
                if ((this.tableMOM_RCP_VIEW != null)) {
                    this.tableMOM_RCP_VIEW.InitVars();
                }
            }
            this.tableMOM_FRG = ((MOM_FRGDataTable)(base.Tables["MOM_FRG"]));
            if ((initTable == true)) {
                if ((this.tableMOM_FRG != null)) {
                    this.tableMOM_FRG.InitVars();
                }
            }
            this.tableMOM_FAV_RCP = ((MOM_FAV_RCPDataTable)(base.Tables["MOM_FAV_RCP"]));
            if ((initTable == true)) {
                if ((this.tableMOM_FAV_RCP != null)) {
                    this.tableMOM_FAV_RCP.InitVars();
                }
            }
            this.tableMOM_RCP_SEARCH = ((MOM_RCP_SEARCHDataTable)(base.Tables["MOM_RCP_SEARCH"]));
            if ((initTable == true)) {
                if ((this.tableMOM_RCP_SEARCH != null)) {
                    this.tableMOM_RCP_SEARCH.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MOMDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MOMDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMOM_USR = new MOM_USRDataTable();
            base.Tables.Add(this.tableMOM_USR);
            this.tableMOM_FRND_RQST = new MOM_FRND_RQSTDataTable();
            base.Tables.Add(this.tableMOM_FRND_RQST);
            this.tableMOM_FRND = new MOM_FRNDDataTable();
            base.Tables.Add(this.tableMOM_FRND);
            this.tableMOM_ANWS = new MOM_ANWSDataTable();
            base.Tables.Add(this.tableMOM_ANWS);
            this.tableMOM_CATG = new MOM_CATGDataTable();
            base.Tables.Add(this.tableMOM_CATG);
            this.tableMOM_USR_QSTN = new MOM_USR_QSTNDataTable();
            base.Tables.Add(this.tableMOM_USR_QSTN);
            this.tableMOM_USR_ANWS = new MOM_USR_ANWSDataTable();
            base.Tables.Add(this.tableMOM_USR_ANWS);
            this.tableMOM_QSTN = new MOM_QSTNDataTable();
            base.Tables.Add(this.tableMOM_QSTN);
            this.tableMOM_IP_TRK = new MOM_IP_TRKDataTable();
            base.Tables.Add(this.tableMOM_IP_TRK);
            this.tableMOM_FRG_SHARED = new MOM_FRG_SHAREDDataTable();
            base.Tables.Add(this.tableMOM_FRG_SHARED);
            this.tableMOM_FRG_CMNT = new MOM_FRG_CMNTDataTable();
            base.Tables.Add(this.tableMOM_FRG_CMNT);
            this.tableMOM_FRG_CMNT_SHARED = new MOM_FRG_CMNT_SHAREDDataTable();
            base.Tables.Add(this.tableMOM_FRG_CMNT_SHARED);
            this.tableMOM_IMPT_EMAIL = new MOM_IMPT_EMAILDataTable();
            base.Tables.Add(this.tableMOM_IMPT_EMAIL);
            this.tableMOM_GRP = new MOM_GRPDataTable();
            base.Tables.Add(this.tableMOM_GRP);
            this.tableMOM_GRP_USR = new MOM_GRP_USRDataTable();
            base.Tables.Add(this.tableMOM_GRP_USR);
            this.tableMOM_BLG = new MOM_BLGDataTable();
            base.Tables.Add(this.tableMOM_BLG);
            this.tableMOM_USR_BLG = new MOM_USR_BLGDataTable();
            base.Tables.Add(this.tableMOM_USR_BLG);
            this.tableMOM_USR_FRND = new MOM_USR_FRNDDataTable();
            base.Tables.Add(this.tableMOM_USR_FRND);
            this.tableMOM_RCP = new MOM_RCPDataTable();
            base.Tables.Add(this.tableMOM_RCP);
            this.tableMOM_RCP_CMT = new MOM_RCP_CMTDataTable();
            base.Tables.Add(this.tableMOM_RCP_CMT);
            this.tableMOM_RCP_RT = new MOM_RCP_RTDataTable();
            base.Tables.Add(this.tableMOM_RCP_RT);
            this.tableMOM_RCP_VIEW = new MOM_RCP_VIEWDataTable();
            base.Tables.Add(this.tableMOM_RCP_VIEW);
            this.tableMOM_FRG = new MOM_FRGDataTable();
            base.Tables.Add(this.tableMOM_FRG);
            this.tableMOM_FAV_RCP = new MOM_FAV_RCPDataTable();
            base.Tables.Add(this.tableMOM_FAV_RCP);
            this.tableMOM_RCP_SEARCH = new MOM_RCP_SEARCHDataTable();
            base.Tables.Add(this.tableMOM_RCP_SEARCH);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_USR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_FRND_RQST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_FRND() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_ANWS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_CATG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_USR_QSTN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_USR_ANWS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_QSTN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_IP_TRK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_FRG_SHARED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_FRG_CMNT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_FRG_CMNT_SHARED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_IMPT_EMAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_GRP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_GRP_USR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_BLG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_USR_BLG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_USR_FRND() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_RCP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_RCP_CMT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_RCP_RT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_RCP_VIEW() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_FRG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_FAV_RCP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOM_RCP_SEARCH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MOMDataset ds = new MOMDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MOM_USRRowChangeEventHandler(object sender, MOM_USRRowChangeEvent e);
        
        public delegate void MOM_FRND_RQSTRowChangeEventHandler(object sender, MOM_FRND_RQSTRowChangeEvent e);
        
        public delegate void MOM_FRNDRowChangeEventHandler(object sender, MOM_FRNDRowChangeEvent e);
        
        public delegate void MOM_ANWSRowChangeEventHandler(object sender, MOM_ANWSRowChangeEvent e);
        
        public delegate void MOM_CATGRowChangeEventHandler(object sender, MOM_CATGRowChangeEvent e);
        
        public delegate void MOM_USR_QSTNRowChangeEventHandler(object sender, MOM_USR_QSTNRowChangeEvent e);
        
        public delegate void MOM_USR_ANWSRowChangeEventHandler(object sender, MOM_USR_ANWSRowChangeEvent e);
        
        public delegate void MOM_QSTNRowChangeEventHandler(object sender, MOM_QSTNRowChangeEvent e);
        
        public delegate void MOM_IP_TRKRowChangeEventHandler(object sender, MOM_IP_TRKRowChangeEvent e);
        
        public delegate void MOM_FRG_SHAREDRowChangeEventHandler(object sender, MOM_FRG_SHAREDRowChangeEvent e);
        
        public delegate void MOM_FRG_CMNTRowChangeEventHandler(object sender, MOM_FRG_CMNTRowChangeEvent e);
        
        public delegate void MOM_FRG_CMNT_SHAREDRowChangeEventHandler(object sender, MOM_FRG_CMNT_SHAREDRowChangeEvent e);
        
        public delegate void MOM_IMPT_EMAILRowChangeEventHandler(object sender, MOM_IMPT_EMAILRowChangeEvent e);
        
        public delegate void MOM_GRPRowChangeEventHandler(object sender, MOM_GRPRowChangeEvent e);
        
        public delegate void MOM_GRP_USRRowChangeEventHandler(object sender, MOM_GRP_USRRowChangeEvent e);
        
        public delegate void MOM_BLGRowChangeEventHandler(object sender, MOM_BLGRowChangeEvent e);
        
        public delegate void MOM_USR_BLGRowChangeEventHandler(object sender, MOM_USR_BLGRowChangeEvent e);
        
        public delegate void MOM_USR_FRNDRowChangeEventHandler(object sender, MOM_USR_FRNDRowChangeEvent e);
        
        public delegate void MOM_RCPRowChangeEventHandler(object sender, MOM_RCPRowChangeEvent e);
        
        public delegate void MOM_RCP_CMTRowChangeEventHandler(object sender, MOM_RCP_CMTRowChangeEvent e);
        
        public delegate void MOM_RCP_RTRowChangeEventHandler(object sender, MOM_RCP_RTRowChangeEvent e);
        
        public delegate void MOM_RCP_VIEWRowChangeEventHandler(object sender, MOM_RCP_VIEWRowChangeEvent e);
        
        public delegate void MOM_FRGRowChangeEventHandler(object sender, MOM_FRGRowChangeEvent e);
        
        public delegate void MOM_FAV_RCPRowChangeEventHandler(object sender, MOM_FAV_RCPRowChangeEvent e);
        
        public delegate void MOM_RCP_SEARCHRowChangeEventHandler(object sender, MOM_RCP_SEARCHRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_USRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEMAIL_ADDR;
            
            private global::System.Data.DataColumn columnPASSWORD;
            
            private global::System.Data.DataColumn columnFIRST_NAME;
            
            private global::System.Data.DataColumn columnLAST_NAME;
            
            private global::System.Data.DataColumn columnFULL_NAME;
            
            private global::System.Data.DataColumn columnSEX;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            private global::System.Data.DataColumn columnNEWLETTER;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnLAST_LOGIN_DATE;
            
            private global::System.Data.DataColumn columnACTIVE;
            
            private global::System.Data.DataColumn columnBLOCKED;
            
            private global::System.Data.DataColumn columnPICTURE;
            
            private global::System.Data.DataColumn columnPICTURE_STATUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USRDataTable() {
                this.TableName = "MOM_USR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_USRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL_ADDRColumn {
                get {
                    return this.columnEMAIL_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWORDColumn {
                get {
                    return this.columnPASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIRST_NAMEColumn {
                get {
                    return this.columnFIRST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_NAMEColumn {
                get {
                    return this.columnLAST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FULL_NAMEColumn {
                get {
                    return this.columnFULL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEXColumn {
                get {
                    return this.columnSEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NEWLETTERColumn {
                get {
                    return this.columnNEWLETTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_LOGIN_DATEColumn {
                get {
                    return this.columnLAST_LOGIN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTIVEColumn {
                get {
                    return this.columnACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOCKEDColumn {
                get {
                    return this.columnBLOCKED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTUREColumn {
                get {
                    return this.columnPICTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTURE_STATUSColumn {
                get {
                    return this.columnPICTURE_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USRRow this[int index] {
                get {
                    return ((MOM_USRRow)(this.Rows[index]));
                }
            }
            
            public event MOM_USRRowChangeEventHandler MOM_USRRowChanging;
            
            public event MOM_USRRowChangeEventHandler MOM_USRRowChanged;
            
            public event MOM_USRRowChangeEventHandler MOM_USRRowDeleting;
            
            public event MOM_USRRowChangeEventHandler MOM_USRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_USRRow(MOM_USRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USRRow AddMOM_USRRow(string EMAIL_ADDR, string PASSWORD, string FIRST_NAME, string LAST_NAME, string FULL_NAME, string SEX, System.DateTime DOB, string DISPLAY_NAME, bool NEWLETTER, System.DateTime TIME, System.DateTime LAST_LOGIN_DATE, bool ACTIVE, bool BLOCKED, string PICTURE, bool PICTURE_STATUS) {
                MOM_USRRow rowMOM_USRRow = ((MOM_USRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EMAIL_ADDR,
                        PASSWORD,
                        FIRST_NAME,
                        LAST_NAME,
                        FULL_NAME,
                        SEX,
                        DOB,
                        DISPLAY_NAME,
                        NEWLETTER,
                        TIME,
                        LAST_LOGIN_DATE,
                        ACTIVE,
                        BLOCKED,
                        PICTURE,
                        PICTURE_STATUS};
                rowMOM_USRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_USRRow);
                return rowMOM_USRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_USRDataTable cln = ((MOM_USRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_USRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnEMAIL_ADDR = base.Columns["EMAIL_ADDR"];
                this.columnPASSWORD = base.Columns["PASSWORD"];
                this.columnFIRST_NAME = base.Columns["FIRST_NAME"];
                this.columnLAST_NAME = base.Columns["LAST_NAME"];
                this.columnFULL_NAME = base.Columns["FULL_NAME"];
                this.columnSEX = base.Columns["SEX"];
                this.columnDOB = base.Columns["DOB"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
                this.columnNEWLETTER = base.Columns["NEWLETTER"];
                this.columnTIME = base.Columns["TIME"];
                this.columnLAST_LOGIN_DATE = base.Columns["LAST_LOGIN_DATE"];
                this.columnACTIVE = base.Columns["ACTIVE"];
                this.columnBLOCKED = base.Columns["BLOCKED"];
                this.columnPICTURE = base.Columns["PICTURE"];
                this.columnPICTURE_STATUS = base.Columns["PICTURE_STATUS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEMAIL_ADDR = new global::System.Data.DataColumn("EMAIL_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_ADDR);
                this.columnPASSWORD = new global::System.Data.DataColumn("PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD);
                this.columnFIRST_NAME = new global::System.Data.DataColumn("FIRST_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRST_NAME);
                this.columnLAST_NAME = new global::System.Data.DataColumn("LAST_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_NAME);
                this.columnFULL_NAME = new global::System.Data.DataColumn("FULL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFULL_NAME);
                this.columnSEX = new global::System.Data.DataColumn("SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
                this.columnNEWLETTER = new global::System.Data.DataColumn("NEWLETTER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEWLETTER);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnLAST_LOGIN_DATE = new global::System.Data.DataColumn("LAST_LOGIN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_LOGIN_DATE);
                this.columnACTIVE = new global::System.Data.DataColumn("ACTIVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE);
                this.columnBLOCKED = new global::System.Data.DataColumn("BLOCKED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOCKED);
                this.columnPICTURE = new global::System.Data.DataColumn("PICTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE);
                this.columnPICTURE_STATUS = new global::System.Data.DataColumn("PICTURE_STATUS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE_STATUS);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnEMAIL_ADDR.MaxLength = 100;
                this.columnPASSWORD.MaxLength = 50;
                this.columnFIRST_NAME.MaxLength = 50;
                this.columnLAST_NAME.MaxLength = 50;
                this.columnFULL_NAME.MaxLength = 50;
                this.columnSEX.MaxLength = 1;
                this.columnDISPLAY_NAME.MaxLength = 15;
                this.columnPICTURE.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USRRow NewMOM_USRRow() {
                return ((MOM_USRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_USRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_USRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_USRRowChanged != null)) {
                    this.MOM_USRRowChanged(this, new MOM_USRRowChangeEvent(((MOM_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_USRRowChanging != null)) {
                    this.MOM_USRRowChanging(this, new MOM_USRRowChangeEvent(((MOM_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_USRRowDeleted != null)) {
                    this.MOM_USRRowDeleted(this, new MOM_USRRowChangeEvent(((MOM_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_USRRowDeleting != null)) {
                    this.MOM_USRRowDeleting(this, new MOM_USRRowChangeEvent(((MOM_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_USRRow(MOM_USRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_USRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_FRND_RQSTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnMOM_FRND_USR_ID;
            
            private global::System.Data.DataColumn columnSUBJECT;
            
            private global::System.Data.DataColumn columnMESSAGE;
            
            private global::System.Data.DataColumn columnOPENED;
            
            private global::System.Data.DataColumn columnFLAG;
            
            private global::System.Data.DataColumn columnARCHIVE;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRND_RQSTDataTable() {
                this.TableName = "MOM_FRND_RQST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRND_RQSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_FRND_RQSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_FRND_USR_IDColumn {
                get {
                    return this.columnMOM_FRND_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUBJECTColumn {
                get {
                    return this.columnSUBJECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MESSAGEColumn {
                get {
                    return this.columnMESSAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPENEDColumn {
                get {
                    return this.columnOPENED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLAGColumn {
                get {
                    return this.columnFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ARCHIVEColumn {
                get {
                    return this.columnARCHIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRND_RQSTRow this[int index] {
                get {
                    return ((MOM_FRND_RQSTRow)(this.Rows[index]));
                }
            }
            
            public event MOM_FRND_RQSTRowChangeEventHandler MOM_FRND_RQSTRowChanging;
            
            public event MOM_FRND_RQSTRowChangeEventHandler MOM_FRND_RQSTRowChanged;
            
            public event MOM_FRND_RQSTRowChangeEventHandler MOM_FRND_RQSTRowDeleting;
            
            public event MOM_FRND_RQSTRowChangeEventHandler MOM_FRND_RQSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_FRND_RQSTRow(MOM_FRND_RQSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRND_RQSTRow AddMOM_FRND_RQSTRow(long MOM_USR_ID, long MOM_FRND_USR_ID, string SUBJECT, string MESSAGE, bool OPENED, bool FLAG, bool ARCHIVE, System.DateTime TIME) {
                MOM_FRND_RQSTRow rowMOM_FRND_RQSTRow = ((MOM_FRND_RQSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_USR_ID,
                        MOM_FRND_USR_ID,
                        SUBJECT,
                        MESSAGE,
                        OPENED,
                        FLAG,
                        ARCHIVE,
                        TIME};
                rowMOM_FRND_RQSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_FRND_RQSTRow);
                return rowMOM_FRND_RQSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_FRND_RQSTDataTable cln = ((MOM_FRND_RQSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_FRND_RQSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnMOM_FRND_USR_ID = base.Columns["MOM_FRND_USR_ID"];
                this.columnSUBJECT = base.Columns["SUBJECT"];
                this.columnMESSAGE = base.Columns["MESSAGE"];
                this.columnOPENED = base.Columns["OPENED"];
                this.columnFLAG = base.Columns["FLAG"];
                this.columnARCHIVE = base.Columns["ARCHIVE"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnMOM_FRND_USR_ID = new global::System.Data.DataColumn("MOM_FRND_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_FRND_USR_ID);
                this.columnSUBJECT = new global::System.Data.DataColumn("SUBJECT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBJECT);
                this.columnMESSAGE = new global::System.Data.DataColumn("MESSAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMESSAGE);
                this.columnOPENED = new global::System.Data.DataColumn("OPENED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPENED);
                this.columnFLAG = new global::System.Data.DataColumn("FLAG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLAG);
                this.columnARCHIVE = new global::System.Data.DataColumn("ARCHIVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARCHIVE);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSUBJECT.MaxLength = 100;
                this.columnMESSAGE.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRND_RQSTRow NewMOM_FRND_RQSTRow() {
                return ((MOM_FRND_RQSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_FRND_RQSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_FRND_RQSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_FRND_RQSTRowChanged != null)) {
                    this.MOM_FRND_RQSTRowChanged(this, new MOM_FRND_RQSTRowChangeEvent(((MOM_FRND_RQSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_FRND_RQSTRowChanging != null)) {
                    this.MOM_FRND_RQSTRowChanging(this, new MOM_FRND_RQSTRowChangeEvent(((MOM_FRND_RQSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_FRND_RQSTRowDeleted != null)) {
                    this.MOM_FRND_RQSTRowDeleted(this, new MOM_FRND_RQSTRowChangeEvent(((MOM_FRND_RQSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_FRND_RQSTRowDeleting != null)) {
                    this.MOM_FRND_RQSTRowDeleting(this, new MOM_FRND_RQSTRowChangeEvent(((MOM_FRND_RQSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_FRND_RQSTRow(MOM_FRND_RQSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_FRND_RQSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_FRNDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnFRND_MOM_USR_ID;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnBLOCKED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRNDDataTable() {
                this.TableName = "MOM_FRND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRNDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_FRNDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FRND_MOM_USR_IDColumn {
                get {
                    return this.columnFRND_MOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOCKEDColumn {
                get {
                    return this.columnBLOCKED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRNDRow this[int index] {
                get {
                    return ((MOM_FRNDRow)(this.Rows[index]));
                }
            }
            
            public event MOM_FRNDRowChangeEventHandler MOM_FRNDRowChanging;
            
            public event MOM_FRNDRowChangeEventHandler MOM_FRNDRowChanged;
            
            public event MOM_FRNDRowChangeEventHandler MOM_FRNDRowDeleting;
            
            public event MOM_FRNDRowChangeEventHandler MOM_FRNDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_FRNDRow(MOM_FRNDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRNDRow AddMOM_FRNDRow(long MOM_USR_ID, long FRND_MOM_USR_ID, System.DateTime TIME, bool BLOCKED) {
                MOM_FRNDRow rowMOM_FRNDRow = ((MOM_FRNDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_USR_ID,
                        FRND_MOM_USR_ID,
                        TIME,
                        BLOCKED};
                rowMOM_FRNDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_FRNDRow);
                return rowMOM_FRNDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_FRNDDataTable cln = ((MOM_FRNDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_FRNDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnFRND_MOM_USR_ID = base.Columns["FRND_MOM_USR_ID"];
                this.columnTIME = base.Columns["TIME"];
                this.columnBLOCKED = base.Columns["BLOCKED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnFRND_MOM_USR_ID = new global::System.Data.DataColumn("FRND_MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFRND_MOM_USR_ID);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnBLOCKED = new global::System.Data.DataColumn("BLOCKED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOCKED);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRNDRow NewMOM_FRNDRow() {
                return ((MOM_FRNDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_FRNDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_FRNDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_FRNDRowChanged != null)) {
                    this.MOM_FRNDRowChanged(this, new MOM_FRNDRowChangeEvent(((MOM_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_FRNDRowChanging != null)) {
                    this.MOM_FRNDRowChanging(this, new MOM_FRNDRowChangeEvent(((MOM_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_FRNDRowDeleted != null)) {
                    this.MOM_FRNDRowDeleted(this, new MOM_FRNDRowChangeEvent(((MOM_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_FRNDRowDeleting != null)) {
                    this.MOM_FRNDRowDeleting(this, new MOM_FRNDRowChangeEvent(((MOM_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_FRNDRow(MOM_FRNDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_FRNDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_ANWSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnMOM_QSTN_ID;
            
            private global::System.Data.DataColumn columnANSWER;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnABUSE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_ANWSDataTable() {
                this.TableName = "MOM_ANWS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_ANWSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_ANWSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_QSTN_IDColumn {
                get {
                    return this.columnMOM_QSTN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANSWERColumn {
                get {
                    return this.columnANSWER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABUSEColumn {
                get {
                    return this.columnABUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_ANWSRow this[int index] {
                get {
                    return ((MOM_ANWSRow)(this.Rows[index]));
                }
            }
            
            public event MOM_ANWSRowChangeEventHandler MOM_ANWSRowChanging;
            
            public event MOM_ANWSRowChangeEventHandler MOM_ANWSRowChanged;
            
            public event MOM_ANWSRowChangeEventHandler MOM_ANWSRowDeleting;
            
            public event MOM_ANWSRowChangeEventHandler MOM_ANWSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_ANWSRow(MOM_ANWSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_ANWSRow AddMOM_ANWSRow(long MOM_USR_ID, int MOM_QSTN_ID, string ANSWER, System.DateTime TIME, bool ABUSE) {
                MOM_ANWSRow rowMOM_ANWSRow = ((MOM_ANWSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_USR_ID,
                        MOM_QSTN_ID,
                        ANSWER,
                        TIME,
                        ABUSE};
                rowMOM_ANWSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_ANWSRow);
                return rowMOM_ANWSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_ANWSDataTable cln = ((MOM_ANWSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_ANWSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnMOM_QSTN_ID = base.Columns["MOM_QSTN_ID"];
                this.columnANSWER = base.Columns["ANSWER"];
                this.columnTIME = base.Columns["TIME"];
                this.columnABUSE = base.Columns["ABUSE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnMOM_QSTN_ID = new global::System.Data.DataColumn("MOM_QSTN_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_QSTN_ID);
                this.columnANSWER = new global::System.Data.DataColumn("ANSWER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANSWER);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnABUSE = new global::System.Data.DataColumn("ABUSE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABUSE);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnANSWER.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_ANWSRow NewMOM_ANWSRow() {
                return ((MOM_ANWSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_ANWSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_ANWSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_ANWSRowChanged != null)) {
                    this.MOM_ANWSRowChanged(this, new MOM_ANWSRowChangeEvent(((MOM_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_ANWSRowChanging != null)) {
                    this.MOM_ANWSRowChanging(this, new MOM_ANWSRowChangeEvent(((MOM_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_ANWSRowDeleted != null)) {
                    this.MOM_ANWSRowDeleted(this, new MOM_ANWSRowChangeEvent(((MOM_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_ANWSRowDeleting != null)) {
                    this.MOM_ANWSRowDeleting(this, new MOM_ANWSRowChangeEvent(((MOM_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_ANWSRow(MOM_ANWSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_ANWSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_CATGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_CATGDataTable() {
                this.TableName = "MOM_CATG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_CATGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_CATGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_CATGRow this[int index] {
                get {
                    return ((MOM_CATGRow)(this.Rows[index]));
                }
            }
            
            public event MOM_CATGRowChangeEventHandler MOM_CATGRowChanging;
            
            public event MOM_CATGRowChangeEventHandler MOM_CATGRowChanged;
            
            public event MOM_CATGRowChangeEventHandler MOM_CATGRowDeleting;
            
            public event MOM_CATGRowChangeEventHandler MOM_CATGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_CATGRow(MOM_CATGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_CATGRow AddMOM_CATGRow(string NAME) {
                MOM_CATGRow rowMOM_CATGRow = ((MOM_CATGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME};
                rowMOM_CATGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_CATGRow);
                return rowMOM_CATGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_CATGDataTable cln = ((MOM_CATGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_CATGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnNAME.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_CATGRow NewMOM_CATGRow() {
                return ((MOM_CATGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_CATGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_CATGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_CATGRowChanged != null)) {
                    this.MOM_CATGRowChanged(this, new MOM_CATGRowChangeEvent(((MOM_CATGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_CATGRowChanging != null)) {
                    this.MOM_CATGRowChanging(this, new MOM_CATGRowChangeEvent(((MOM_CATGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_CATGRowDeleted != null)) {
                    this.MOM_CATGRowDeleted(this, new MOM_CATGRowChangeEvent(((MOM_CATGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_CATGRowDeleting != null)) {
                    this.MOM_CATGRowDeleting(this, new MOM_CATGRowChangeEvent(((MOM_CATGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_CATGRow(MOM_CATGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_CATGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_USR_QSTNDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnQUESTION;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnMOM_CATG_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            private global::System.Data.DataColumn columnANSWERS_COUNT;
            
            private global::System.Data.DataColumn columnPICTURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_QSTNDataTable() {
                this.TableName = "MOM_USR_QSTN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_QSTNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_USR_QSTNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUESTIONColumn {
                get {
                    return this.columnQUESTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_CATG_IDColumn {
                get {
                    return this.columnMOM_CATG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANSWERS_COUNTColumn {
                get {
                    return this.columnANSWERS_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTUREColumn {
                get {
                    return this.columnPICTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_QSTNRow this[int index] {
                get {
                    return ((MOM_USR_QSTNRow)(this.Rows[index]));
                }
            }
            
            public event MOM_USR_QSTNRowChangeEventHandler MOM_USR_QSTNRowChanging;
            
            public event MOM_USR_QSTNRowChangeEventHandler MOM_USR_QSTNRowChanged;
            
            public event MOM_USR_QSTNRowChangeEventHandler MOM_USR_QSTNRowDeleting;
            
            public event MOM_USR_QSTNRowChangeEventHandler MOM_USR_QSTNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_USR_QSTNRow(MOM_USR_QSTNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_QSTNRow AddMOM_USR_QSTNRow(int ID, string QUESTION, string TIME, int MOM_CATG_ID, long MOM_USR_ID, string DISPLAY_NAME, int ANSWERS_COUNT, string PICTURE) {
                MOM_USR_QSTNRow rowMOM_USR_QSTNRow = ((MOM_USR_QSTNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        QUESTION,
                        TIME,
                        MOM_CATG_ID,
                        MOM_USR_ID,
                        DISPLAY_NAME,
                        ANSWERS_COUNT,
                        PICTURE};
                rowMOM_USR_QSTNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_USR_QSTNRow);
                return rowMOM_USR_QSTNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_USR_QSTNDataTable cln = ((MOM_USR_QSTNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_USR_QSTNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnQUESTION = base.Columns["QUESTION"];
                this.columnTIME = base.Columns["TIME"];
                this.columnMOM_CATG_ID = base.Columns["MOM_CATG_ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
                this.columnANSWERS_COUNT = base.Columns["ANSWERS_COUNT"];
                this.columnPICTURE = base.Columns["PICTURE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnQUESTION = new global::System.Data.DataColumn("QUESTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUESTION);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnMOM_CATG_ID = new global::System.Data.DataColumn("MOM_CATG_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_CATG_ID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
                this.columnANSWERS_COUNT = new global::System.Data.DataColumn("ANSWERS_COUNT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANSWERS_COUNT);
                this.columnPICTURE = new global::System.Data.DataColumn("PICTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE);
                this.columnID.AllowDBNull = false;
                this.columnQUESTION.MaxLength = 500;
                this.columnDISPLAY_NAME.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_QSTNRow NewMOM_USR_QSTNRow() {
                return ((MOM_USR_QSTNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_USR_QSTNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_USR_QSTNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_USR_QSTNRowChanged != null)) {
                    this.MOM_USR_QSTNRowChanged(this, new MOM_USR_QSTNRowChangeEvent(((MOM_USR_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_USR_QSTNRowChanging != null)) {
                    this.MOM_USR_QSTNRowChanging(this, new MOM_USR_QSTNRowChangeEvent(((MOM_USR_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_USR_QSTNRowDeleted != null)) {
                    this.MOM_USR_QSTNRowDeleted(this, new MOM_USR_QSTNRowChangeEvent(((MOM_USR_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_USR_QSTNRowDeleting != null)) {
                    this.MOM_USR_QSTNRowDeleting(this, new MOM_USR_QSTNRowChangeEvent(((MOM_USR_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_USR_QSTNRow(MOM_USR_QSTNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_USR_QSTNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_USR_ANWSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnANSWER;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            private global::System.Data.DataColumn columnPICTURE;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_ANWSDataTable() {
                this.TableName = "MOM_USR_ANWS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_ANWSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_USR_ANWSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANSWERColumn {
                get {
                    return this.columnANSWER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTUREColumn {
                get {
                    return this.columnPICTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_ANWSRow this[int index] {
                get {
                    return ((MOM_USR_ANWSRow)(this.Rows[index]));
                }
            }
            
            public event MOM_USR_ANWSRowChangeEventHandler MOM_USR_ANWSRowChanging;
            
            public event MOM_USR_ANWSRowChangeEventHandler MOM_USR_ANWSRowChanged;
            
            public event MOM_USR_ANWSRowChangeEventHandler MOM_USR_ANWSRowDeleting;
            
            public event MOM_USR_ANWSRowChangeEventHandler MOM_USR_ANWSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_USR_ANWSRow(MOM_USR_ANWSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_ANWSRow AddMOM_USR_ANWSRow(string ANSWER, string TIME, string DISPLAY_NAME, string PICTURE, long MOM_USR_ID) {
                MOM_USR_ANWSRow rowMOM_USR_ANWSRow = ((MOM_USR_ANWSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ANSWER,
                        TIME,
                        DISPLAY_NAME,
                        PICTURE,
                        MOM_USR_ID};
                rowMOM_USR_ANWSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_USR_ANWSRow);
                return rowMOM_USR_ANWSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_USR_ANWSDataTable cln = ((MOM_USR_ANWSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_USR_ANWSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnANSWER = base.Columns["ANSWER"];
                this.columnTIME = base.Columns["TIME"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
                this.columnPICTURE = base.Columns["PICTURE"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnANSWER = new global::System.Data.DataColumn("ANSWER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANSWER);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
                this.columnPICTURE = new global::System.Data.DataColumn("PICTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnANSWER.MaxLength = 1000;
                this.columnTIME.MaxLength = 255;
                this.columnDISPLAY_NAME.MaxLength = 25;
                this.columnPICTURE.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_ANWSRow NewMOM_USR_ANWSRow() {
                return ((MOM_USR_ANWSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_USR_ANWSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_USR_ANWSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_USR_ANWSRowChanged != null)) {
                    this.MOM_USR_ANWSRowChanged(this, new MOM_USR_ANWSRowChangeEvent(((MOM_USR_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_USR_ANWSRowChanging != null)) {
                    this.MOM_USR_ANWSRowChanging(this, new MOM_USR_ANWSRowChangeEvent(((MOM_USR_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_USR_ANWSRowDeleted != null)) {
                    this.MOM_USR_ANWSRowDeleted(this, new MOM_USR_ANWSRowChangeEvent(((MOM_USR_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_USR_ANWSRowDeleting != null)) {
                    this.MOM_USR_ANWSRowDeleting(this, new MOM_USR_ANWSRowChangeEvent(((MOM_USR_ANWSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_USR_ANWSRow(MOM_USR_ANWSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_USR_ANWSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_QSTNDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnMOM_CATG_ID;
            
            private global::System.Data.DataColumn columnQUESTION;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnABUSE;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            private global::System.Data.DataColumn columnEMAIL_STATUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_QSTNDataTable() {
                this.TableName = "MOM_QSTN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_QSTNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_QSTNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_CATG_IDColumn {
                get {
                    return this.columnMOM_CATG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUESTIONColumn {
                get {
                    return this.columnQUESTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABUSEColumn {
                get {
                    return this.columnABUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL_STATUSColumn {
                get {
                    return this.columnEMAIL_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_QSTNRow this[int index] {
                get {
                    return ((MOM_QSTNRow)(this.Rows[index]));
                }
            }
            
            public event MOM_QSTNRowChangeEventHandler MOM_QSTNRowChanging;
            
            public event MOM_QSTNRowChangeEventHandler MOM_QSTNRowChanged;
            
            public event MOM_QSTNRowChangeEventHandler MOM_QSTNRowDeleting;
            
            public event MOM_QSTNRowChangeEventHandler MOM_QSTNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_QSTNRow(MOM_QSTNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_QSTNRow AddMOM_QSTNRow(long MOM_USR_ID, int MOM_CATG_ID, string QUESTION, string DESCRIPTION, bool STATUS, System.DateTime TIME, bool ABUSE, string DISPLAY_NAME, bool EMAIL_STATUS) {
                MOM_QSTNRow rowMOM_QSTNRow = ((MOM_QSTNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_USR_ID,
                        MOM_CATG_ID,
                        QUESTION,
                        DESCRIPTION,
                        STATUS,
                        TIME,
                        ABUSE,
                        DISPLAY_NAME,
                        EMAIL_STATUS};
                rowMOM_QSTNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_QSTNRow);
                return rowMOM_QSTNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_QSTNDataTable cln = ((MOM_QSTNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_QSTNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnMOM_CATG_ID = base.Columns["MOM_CATG_ID"];
                this.columnQUESTION = base.Columns["QUESTION"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnTIME = base.Columns["TIME"];
                this.columnABUSE = base.Columns["ABUSE"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
                this.columnEMAIL_STATUS = base.Columns["EMAIL_STATUS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnMOM_CATG_ID = new global::System.Data.DataColumn("MOM_CATG_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_CATG_ID);
                this.columnQUESTION = new global::System.Data.DataColumn("QUESTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUESTION);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnABUSE = new global::System.Data.DataColumn("ABUSE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABUSE);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
                this.columnEMAIL_STATUS = new global::System.Data.DataColumn("EMAIL_STATUS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_STATUS);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnQUESTION.MaxLength = 100;
                this.columnDESCRIPTION.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_QSTNRow NewMOM_QSTNRow() {
                return ((MOM_QSTNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_QSTNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_QSTNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_QSTNRowChanged != null)) {
                    this.MOM_QSTNRowChanged(this, new MOM_QSTNRowChangeEvent(((MOM_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_QSTNRowChanging != null)) {
                    this.MOM_QSTNRowChanging(this, new MOM_QSTNRowChangeEvent(((MOM_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_QSTNRowDeleted != null)) {
                    this.MOM_QSTNRowDeleted(this, new MOM_QSTNRowChangeEvent(((MOM_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_QSTNRowDeleting != null)) {
                    this.MOM_QSTNRowDeleting(this, new MOM_QSTNRowChangeEvent(((MOM_QSTNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_QSTNRow(MOM_QSTNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_QSTNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_IP_TRKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIP_ADR;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IP_TRKDataTable() {
                this.TableName = "MOM_IP_TRK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_IP_TRKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_IP_TRKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IP_ADRColumn {
                get {
                    return this.columnIP_ADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IP_TRKRow this[int index] {
                get {
                    return ((MOM_IP_TRKRow)(this.Rows[index]));
                }
            }
            
            public event MOM_IP_TRKRowChangeEventHandler MOM_IP_TRKRowChanging;
            
            public event MOM_IP_TRKRowChangeEventHandler MOM_IP_TRKRowChanged;
            
            public event MOM_IP_TRKRowChangeEventHandler MOM_IP_TRKRowDeleting;
            
            public event MOM_IP_TRKRowChangeEventHandler MOM_IP_TRKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_IP_TRKRow(MOM_IP_TRKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IP_TRKRow AddMOM_IP_TRKRow(string IP_ADR, long MOM_USR_ID, System.DateTime TIME) {
                MOM_IP_TRKRow rowMOM_IP_TRKRow = ((MOM_IP_TRKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        IP_ADR,
                        MOM_USR_ID,
                        TIME};
                rowMOM_IP_TRKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_IP_TRKRow);
                return rowMOM_IP_TRKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_IP_TRKDataTable cln = ((MOM_IP_TRKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_IP_TRKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIP_ADR = base.Columns["IP_ADR"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIP_ADR = new global::System.Data.DataColumn("IP_ADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_ADR);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnIP_ADR.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IP_TRKRow NewMOM_IP_TRKRow() {
                return ((MOM_IP_TRKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_IP_TRKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_IP_TRKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_IP_TRKRowChanged != null)) {
                    this.MOM_IP_TRKRowChanged(this, new MOM_IP_TRKRowChangeEvent(((MOM_IP_TRKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_IP_TRKRowChanging != null)) {
                    this.MOM_IP_TRKRowChanging(this, new MOM_IP_TRKRowChangeEvent(((MOM_IP_TRKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_IP_TRKRowDeleted != null)) {
                    this.MOM_IP_TRKRowDeleted(this, new MOM_IP_TRKRowChangeEvent(((MOM_IP_TRKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_IP_TRKRowDeleting != null)) {
                    this.MOM_IP_TRKRowDeleting(this, new MOM_IP_TRKRowChangeEvent(((MOM_IP_TRKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_IP_TRKRow(MOM_IP_TRKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_IP_TRKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_FRG_SHAREDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnSHARE;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            private global::System.Data.DataColumn columnPICTURE;
            
            private global::System.Data.DataColumn columnHIDE;
            
            private global::System.Data.DataColumn columnTYPE_SHARE;
            
            private global::System.Data.DataColumn columnTYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_SHAREDDataTable() {
                this.TableName = "MOM_FRG_SHARED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRG_SHAREDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_FRG_SHAREDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHAREColumn {
                get {
                    return this.columnSHARE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTUREColumn {
                get {
                    return this.columnPICTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIDEColumn {
                get {
                    return this.columnHIDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_SHAREColumn {
                get {
                    return this.columnTYPE_SHARE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_SHAREDRow this[int index] {
                get {
                    return ((MOM_FRG_SHAREDRow)(this.Rows[index]));
                }
            }
            
            public event MOM_FRG_SHAREDRowChangeEventHandler MOM_FRG_SHAREDRowChanging;
            
            public event MOM_FRG_SHAREDRowChangeEventHandler MOM_FRG_SHAREDRowChanged;
            
            public event MOM_FRG_SHAREDRowChangeEventHandler MOM_FRG_SHAREDRowDeleting;
            
            public event MOM_FRG_SHAREDRowChangeEventHandler MOM_FRG_SHAREDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_FRG_SHAREDRow(MOM_FRG_SHAREDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_SHAREDRow AddMOM_FRG_SHAREDRow(int ID, long MOM_USR_ID, string SHARE, string TIME, string DISPLAY_NAME, string PICTURE, bool HIDE, string TYPE_SHARE, string TYPE) {
                MOM_FRG_SHAREDRow rowMOM_FRG_SHAREDRow = ((MOM_FRG_SHAREDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        MOM_USR_ID,
                        SHARE,
                        TIME,
                        DISPLAY_NAME,
                        PICTURE,
                        HIDE,
                        TYPE_SHARE,
                        TYPE};
                rowMOM_FRG_SHAREDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_FRG_SHAREDRow);
                return rowMOM_FRG_SHAREDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_FRG_SHAREDDataTable cln = ((MOM_FRG_SHAREDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_FRG_SHAREDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnSHARE = base.Columns["SHARE"];
                this.columnTIME = base.Columns["TIME"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
                this.columnPICTURE = base.Columns["PICTURE"];
                this.columnHIDE = base.Columns["HIDE"];
                this.columnTYPE_SHARE = base.Columns["TYPE_SHARE"];
                this.columnTYPE = base.Columns["TYPE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnSHARE = new global::System.Data.DataColumn("SHARE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
                this.columnPICTURE = new global::System.Data.DataColumn("PICTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE);
                this.columnHIDE = new global::System.Data.DataColumn("HIDE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIDE);
                this.columnTYPE_SHARE = new global::System.Data.DataColumn("TYPE_SHARE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_SHARE);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnID.AllowDBNull = false;
                this.columnSHARE.MaxLength = 255;
                this.columnTIME.MaxLength = 255;
                this.columnDISPLAY_NAME.MaxLength = 25;
                this.columnPICTURE.AllowDBNull = false;
                this.columnPICTURE.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_SHAREDRow NewMOM_FRG_SHAREDRow() {
                return ((MOM_FRG_SHAREDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_FRG_SHAREDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_FRG_SHAREDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_FRG_SHAREDRowChanged != null)) {
                    this.MOM_FRG_SHAREDRowChanged(this, new MOM_FRG_SHAREDRowChangeEvent(((MOM_FRG_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_FRG_SHAREDRowChanging != null)) {
                    this.MOM_FRG_SHAREDRowChanging(this, new MOM_FRG_SHAREDRowChangeEvent(((MOM_FRG_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_FRG_SHAREDRowDeleted != null)) {
                    this.MOM_FRG_SHAREDRowDeleted(this, new MOM_FRG_SHAREDRowChangeEvent(((MOM_FRG_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_FRG_SHAREDRowDeleting != null)) {
                    this.MOM_FRG_SHAREDRowDeleting(this, new MOM_FRG_SHAREDRowChangeEvent(((MOM_FRG_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_FRG_SHAREDRow(MOM_FRG_SHAREDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_FRG_SHAREDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_FRG_CMNTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_FRG_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNTDataTable() {
                this.TableName = "MOM_FRG_CMNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRG_CMNTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_FRG_CMNTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_FRG_IDColumn {
                get {
                    return this.columnMOM_FRG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNTRow this[int index] {
                get {
                    return ((MOM_FRG_CMNTRow)(this.Rows[index]));
                }
            }
            
            public event MOM_FRG_CMNTRowChangeEventHandler MOM_FRG_CMNTRowChanging;
            
            public event MOM_FRG_CMNTRowChangeEventHandler MOM_FRG_CMNTRowChanged;
            
            public event MOM_FRG_CMNTRowChangeEventHandler MOM_FRG_CMNTRowDeleting;
            
            public event MOM_FRG_CMNTRowChangeEventHandler MOM_FRG_CMNTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_FRG_CMNTRow(MOM_FRG_CMNTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNTRow AddMOM_FRG_CMNTRow(int MOM_FRG_ID, long MOM_USR_ID, string COMMENTS, System.DateTime TIME) {
                MOM_FRG_CMNTRow rowMOM_FRG_CMNTRow = ((MOM_FRG_CMNTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_FRG_ID,
                        MOM_USR_ID,
                        COMMENTS,
                        TIME};
                rowMOM_FRG_CMNTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_FRG_CMNTRow);
                return rowMOM_FRG_CMNTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_FRG_CMNTDataTable cln = ((MOM_FRG_CMNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_FRG_CMNTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_FRG_ID = base.Columns["MOM_FRG_ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_FRG_ID = new global::System.Data.DataColumn("MOM_FRG_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_FRG_ID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnMOM_USR_ID.Caption = "MOM_USER_ID";
                this.columnCOMMENTS.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNTRow NewMOM_FRG_CMNTRow() {
                return ((MOM_FRG_CMNTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_FRG_CMNTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_FRG_CMNTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_FRG_CMNTRowChanged != null)) {
                    this.MOM_FRG_CMNTRowChanged(this, new MOM_FRG_CMNTRowChangeEvent(((MOM_FRG_CMNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_FRG_CMNTRowChanging != null)) {
                    this.MOM_FRG_CMNTRowChanging(this, new MOM_FRG_CMNTRowChangeEvent(((MOM_FRG_CMNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_FRG_CMNTRowDeleted != null)) {
                    this.MOM_FRG_CMNTRowDeleted(this, new MOM_FRG_CMNTRowChangeEvent(((MOM_FRG_CMNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_FRG_CMNTRowDeleting != null)) {
                    this.MOM_FRG_CMNTRowDeleting(this, new MOM_FRG_CMNTRowChangeEvent(((MOM_FRG_CMNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_FRG_CMNTRow(MOM_FRG_CMNTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_FRG_CMNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_FRG_CMNT_SHAREDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            private global::System.Data.DataColumn columnPICTURE;
            
            private global::System.Data.DataColumn columnMOM_FRG_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNT_SHAREDDataTable() {
                this.TableName = "MOM_FRG_CMNT_SHARED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRG_CMNT_SHAREDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_FRG_CMNT_SHAREDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTUREColumn {
                get {
                    return this.columnPICTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_FRG_IDColumn {
                get {
                    return this.columnMOM_FRG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNT_SHAREDRow this[int index] {
                get {
                    return ((MOM_FRG_CMNT_SHAREDRow)(this.Rows[index]));
                }
            }
            
            public event MOM_FRG_CMNT_SHAREDRowChangeEventHandler MOM_FRG_CMNT_SHAREDRowChanging;
            
            public event MOM_FRG_CMNT_SHAREDRowChangeEventHandler MOM_FRG_CMNT_SHAREDRowChanged;
            
            public event MOM_FRG_CMNT_SHAREDRowChangeEventHandler MOM_FRG_CMNT_SHAREDRowDeleting;
            
            public event MOM_FRG_CMNT_SHAREDRowChangeEventHandler MOM_FRG_CMNT_SHAREDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_FRG_CMNT_SHAREDRow(MOM_FRG_CMNT_SHAREDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNT_SHAREDRow AddMOM_FRG_CMNT_SHAREDRow(int ID, string COMMENTS, string TIME, string DISPLAY_NAME, string PICTURE, int MOM_FRG_ID, long MOM_USR_ID) {
                MOM_FRG_CMNT_SHAREDRow rowMOM_FRG_CMNT_SHAREDRow = ((MOM_FRG_CMNT_SHAREDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        COMMENTS,
                        TIME,
                        DISPLAY_NAME,
                        PICTURE,
                        MOM_FRG_ID,
                        MOM_USR_ID};
                rowMOM_FRG_CMNT_SHAREDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_FRG_CMNT_SHAREDRow);
                return rowMOM_FRG_CMNT_SHAREDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_FRG_CMNT_SHAREDDataTable cln = ((MOM_FRG_CMNT_SHAREDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_FRG_CMNT_SHAREDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
                this.columnTIME = base.Columns["TIME"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
                this.columnPICTURE = base.Columns["PICTURE"];
                this.columnMOM_FRG_ID = base.Columns["MOM_FRG_ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
                this.columnPICTURE = new global::System.Data.DataColumn("PICTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE);
                this.columnMOM_FRG_ID = new global::System.Data.DataColumn("MOM_FRG_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_FRG_ID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNT_SHAREDRow NewMOM_FRG_CMNT_SHAREDRow() {
                return ((MOM_FRG_CMNT_SHAREDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_FRG_CMNT_SHAREDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_FRG_CMNT_SHAREDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_FRG_CMNT_SHAREDRowChanged != null)) {
                    this.MOM_FRG_CMNT_SHAREDRowChanged(this, new MOM_FRG_CMNT_SHAREDRowChangeEvent(((MOM_FRG_CMNT_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_FRG_CMNT_SHAREDRowChanging != null)) {
                    this.MOM_FRG_CMNT_SHAREDRowChanging(this, new MOM_FRG_CMNT_SHAREDRowChangeEvent(((MOM_FRG_CMNT_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_FRG_CMNT_SHAREDRowDeleted != null)) {
                    this.MOM_FRG_CMNT_SHAREDRowDeleted(this, new MOM_FRG_CMNT_SHAREDRowChangeEvent(((MOM_FRG_CMNT_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_FRG_CMNT_SHAREDRowDeleting != null)) {
                    this.MOM_FRG_CMNT_SHAREDRowDeleting(this, new MOM_FRG_CMNT_SHAREDRowChangeEvent(((MOM_FRG_CMNT_SHAREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_FRG_CMNT_SHAREDRow(MOM_FRG_CMNT_SHAREDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_FRG_CMNT_SHAREDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_IMPT_EMAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IMPT_EMAILDataTable() {
                this.TableName = "MOM_IMPT_EMAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_IMPT_EMAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_IMPT_EMAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IMPT_EMAILRow this[int index] {
                get {
                    return ((MOM_IMPT_EMAILRow)(this.Rows[index]));
                }
            }
            
            public event MOM_IMPT_EMAILRowChangeEventHandler MOM_IMPT_EMAILRowChanging;
            
            public event MOM_IMPT_EMAILRowChangeEventHandler MOM_IMPT_EMAILRowChanged;
            
            public event MOM_IMPT_EMAILRowChangeEventHandler MOM_IMPT_EMAILRowDeleting;
            
            public event MOM_IMPT_EMAILRowChangeEventHandler MOM_IMPT_EMAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_IMPT_EMAILRow(MOM_IMPT_EMAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IMPT_EMAILRow AddMOM_IMPT_EMAILRow(string NAME, string EMAIL) {
                MOM_IMPT_EMAILRow rowMOM_IMPT_EMAILRow = ((MOM_IMPT_EMAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NAME,
                        EMAIL};
                rowMOM_IMPT_EMAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_IMPT_EMAILRow);
                return rowMOM_IMPT_EMAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_IMPT_EMAILDataTable cln = ((MOM_IMPT_EMAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_IMPT_EMAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNAME = base.Columns["NAME"];
                this.columnEMAIL = base.Columns["EMAIL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.ReadOnly = true;
                this.columnNAME.Caption = "ID";
                this.columnNAME.MaxLength = 255;
                this.columnEMAIL.Caption = "NAME";
                this.columnEMAIL.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IMPT_EMAILRow NewMOM_IMPT_EMAILRow() {
                return ((MOM_IMPT_EMAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_IMPT_EMAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_IMPT_EMAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_IMPT_EMAILRowChanged != null)) {
                    this.MOM_IMPT_EMAILRowChanged(this, new MOM_IMPT_EMAILRowChangeEvent(((MOM_IMPT_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_IMPT_EMAILRowChanging != null)) {
                    this.MOM_IMPT_EMAILRowChanging(this, new MOM_IMPT_EMAILRowChangeEvent(((MOM_IMPT_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_IMPT_EMAILRowDeleted != null)) {
                    this.MOM_IMPT_EMAILRowDeleted(this, new MOM_IMPT_EMAILRowChangeEvent(((MOM_IMPT_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_IMPT_EMAILRowDeleting != null)) {
                    this.MOM_IMPT_EMAILRowDeleting(this, new MOM_IMPT_EMAILRowChangeEvent(((MOM_IMPT_EMAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_IMPT_EMAILRow(MOM_IMPT_EMAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_IMPT_EMAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_GRPDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnRECENT_NEWS;
            
            private global::System.Data.DataColumn columnOFFICE;
            
            private global::System.Data.DataColumn columnEMAIL_ADDR;
            
            private global::System.Data.DataColumn columnSTREET;
            
            private global::System.Data.DataColumn columnCITY;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnBLOCKED;
            
            private global::System.Data.DataColumn columnBLOCKED_TIME;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnMEMBERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRPDataTable() {
                this.TableName = "MOM_GRP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_GRPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_GRPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RECENT_NEWSColumn {
                get {
                    return this.columnRECENT_NEWS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OFFICEColumn {
                get {
                    return this.columnOFFICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL_ADDRColumn {
                get {
                    return this.columnEMAIL_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STREETColumn {
                get {
                    return this.columnSTREET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOCKEDColumn {
                get {
                    return this.columnBLOCKED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOCKED_TIMEColumn {
                get {
                    return this.columnBLOCKED_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEMBERSColumn {
                get {
                    return this.columnMEMBERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRPRow this[int index] {
                get {
                    return ((MOM_GRPRow)(this.Rows[index]));
                }
            }
            
            public event MOM_GRPRowChangeEventHandler MOM_GRPRowChanging;
            
            public event MOM_GRPRowChangeEventHandler MOM_GRPRowChanged;
            
            public event MOM_GRPRowChangeEventHandler MOM_GRPRowDeleting;
            
            public event MOM_GRPRowChangeEventHandler MOM_GRPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_GRPRow(MOM_GRPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRPRow AddMOM_GRPRow(string NAME, string DESCRIPTION, string TYPE, string RECENT_NEWS, string OFFICE, string EMAIL_ADDR, string STREET, string CITY, System.DateTime TIME, bool BLOCKED, System.DateTime BLOCKED_TIME, long MOM_USR_ID, int MEMBERS) {
                MOM_GRPRow rowMOM_GRPRow = ((MOM_GRPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME,
                        DESCRIPTION,
                        TYPE,
                        RECENT_NEWS,
                        OFFICE,
                        EMAIL_ADDR,
                        STREET,
                        CITY,
                        TIME,
                        BLOCKED,
                        BLOCKED_TIME,
                        MOM_USR_ID,
                        MEMBERS};
                rowMOM_GRPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_GRPRow);
                return rowMOM_GRPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_GRPDataTable cln = ((MOM_GRPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_GRPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnRECENT_NEWS = base.Columns["RECENT_NEWS"];
                this.columnOFFICE = base.Columns["OFFICE"];
                this.columnEMAIL_ADDR = base.Columns["EMAIL_ADDR"];
                this.columnSTREET = base.Columns["STREET"];
                this.columnCITY = base.Columns["CITY"];
                this.columnTIME = base.Columns["TIME"];
                this.columnBLOCKED = base.Columns["BLOCKED"];
                this.columnBLOCKED_TIME = base.Columns["BLOCKED_TIME"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnMEMBERS = base.Columns["MEMBERS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnRECENT_NEWS = new global::System.Data.DataColumn("RECENT_NEWS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECENT_NEWS);
                this.columnOFFICE = new global::System.Data.DataColumn("OFFICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFFICE);
                this.columnEMAIL_ADDR = new global::System.Data.DataColumn("EMAIL_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_ADDR);
                this.columnSTREET = new global::System.Data.DataColumn("STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTREET);
                this.columnCITY = new global::System.Data.DataColumn("CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCITY);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnBLOCKED = new global::System.Data.DataColumn("BLOCKED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOCKED);
                this.columnBLOCKED_TIME = new global::System.Data.DataColumn("BLOCKED_TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOCKED_TIME);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnMEMBERS = new global::System.Data.DataColumn("MEMBERS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBERS);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnNAME.MaxLength = 255;
                this.columnDESCRIPTION.MaxLength = 500;
                this.columnTYPE.MaxLength = 50;
                this.columnRECENT_NEWS.MaxLength = 500;
                this.columnOFFICE.MaxLength = 100;
                this.columnEMAIL_ADDR.MaxLength = 255;
                this.columnSTREET.MaxLength = 100;
                this.columnCITY.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRPRow NewMOM_GRPRow() {
                return ((MOM_GRPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_GRPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_GRPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_GRPRowChanged != null)) {
                    this.MOM_GRPRowChanged(this, new MOM_GRPRowChangeEvent(((MOM_GRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_GRPRowChanging != null)) {
                    this.MOM_GRPRowChanging(this, new MOM_GRPRowChangeEvent(((MOM_GRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_GRPRowDeleted != null)) {
                    this.MOM_GRPRowDeleted(this, new MOM_GRPRowChangeEvent(((MOM_GRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_GRPRowDeleting != null)) {
                    this.MOM_GRPRowDeleting(this, new MOM_GRPRowChangeEvent(((MOM_GRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_GRPRow(MOM_GRPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_GRPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_GRP_USRDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMOM_GRP_ID;
            
            private global::System.Data.DataColumn columnMOM_GRP_NAME;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_NAME;
            
            private global::System.Data.DataColumn columnMOM_GRP_MEMBERS;
            
            private global::System.Data.DataColumn columnMEMBERS;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRP_USRDataTable() {
                this.TableName = "MOM_GRP_USR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_GRP_USRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_GRP_USRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_GRP_IDColumn {
                get {
                    return this.columnMOM_GRP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_GRP_NAMEColumn {
                get {
                    return this.columnMOM_GRP_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_NAMEColumn {
                get {
                    return this.columnMOM_USR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_GRP_MEMBERSColumn {
                get {
                    return this.columnMOM_GRP_MEMBERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEMBERSColumn {
                get {
                    return this.columnMEMBERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRP_USRRow this[int index] {
                get {
                    return ((MOM_GRP_USRRow)(this.Rows[index]));
                }
            }
            
            public event MOM_GRP_USRRowChangeEventHandler MOM_GRP_USRRowChanging;
            
            public event MOM_GRP_USRRowChangeEventHandler MOM_GRP_USRRowChanged;
            
            public event MOM_GRP_USRRowChangeEventHandler MOM_GRP_USRRowDeleting;
            
            public event MOM_GRP_USRRowChangeEventHandler MOM_GRP_USRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_GRP_USRRow(MOM_GRP_USRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRP_USRRow AddMOM_GRP_USRRow(int MOM_GRP_ID, string MOM_GRP_NAME, long MOM_USR_ID, string MOM_USR_NAME, int MOM_GRP_MEMBERS, int MEMBERS, string DESCRIPTION) {
                MOM_GRP_USRRow rowMOM_GRP_USRRow = ((MOM_GRP_USRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MOM_GRP_ID,
                        MOM_GRP_NAME,
                        MOM_USR_ID,
                        MOM_USR_NAME,
                        MOM_GRP_MEMBERS,
                        MEMBERS,
                        DESCRIPTION};
                rowMOM_GRP_USRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_GRP_USRRow);
                return rowMOM_GRP_USRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_GRP_USRDataTable cln = ((MOM_GRP_USRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_GRP_USRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMOM_GRP_ID = base.Columns["MOM_GRP_ID"];
                this.columnMOM_GRP_NAME = base.Columns["MOM_GRP_NAME"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnMOM_USR_NAME = base.Columns["MOM_USR_NAME"];
                this.columnMOM_GRP_MEMBERS = base.Columns["MOM_GRP_MEMBERS"];
                this.columnMEMBERS = base.Columns["MEMBERS"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMOM_GRP_ID = new global::System.Data.DataColumn("MOM_GRP_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_GRP_ID);
                this.columnMOM_GRP_NAME = new global::System.Data.DataColumn("MOM_GRP_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_GRP_NAME);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnMOM_USR_NAME = new global::System.Data.DataColumn("MOM_USR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_NAME);
                this.columnMOM_GRP_MEMBERS = new global::System.Data.DataColumn("MOM_GRP_MEMBERS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_GRP_MEMBERS);
                this.columnMEMBERS = new global::System.Data.DataColumn("MEMBERS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBERS);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnMOM_GRP_ID.AllowDBNull = false;
                this.columnMOM_GRP_NAME.MaxLength = 255;
                this.columnMOM_USR_ID.AllowDBNull = false;
                this.columnMOM_USR_NAME.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRP_USRRow NewMOM_GRP_USRRow() {
                return ((MOM_GRP_USRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_GRP_USRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_GRP_USRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_GRP_USRRowChanged != null)) {
                    this.MOM_GRP_USRRowChanged(this, new MOM_GRP_USRRowChangeEvent(((MOM_GRP_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_GRP_USRRowChanging != null)) {
                    this.MOM_GRP_USRRowChanging(this, new MOM_GRP_USRRowChangeEvent(((MOM_GRP_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_GRP_USRRowDeleted != null)) {
                    this.MOM_GRP_USRRowDeleted(this, new MOM_GRP_USRRowChangeEvent(((MOM_GRP_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_GRP_USRRowDeleting != null)) {
                    this.MOM_GRP_USRRowDeleting(this, new MOM_GRP_USRRowChangeEvent(((MOM_GRP_USRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_GRP_USRRow(MOM_GRP_USRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_GRP_USRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_BLGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnTITLE;
            
            private global::System.Data.DataColumn columnBLOG;
            
            private global::System.Data.DataColumn columnTAGS;
            
            private global::System.Data.DataColumn columnPRIVACY;
            
            private global::System.Data.DataColumn columnALLOW_COMMENTS;
            
            private global::System.Data.DataColumn columnEMAIL_STATUS;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnABUSE;
            
            private global::System.Data.DataColumn columnVIEWS;
            
            private global::System.Data.DataColumn columnRATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_BLGDataTable() {
                this.TableName = "MOM_BLG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_BLGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_BLGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOGColumn {
                get {
                    return this.columnBLOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAGSColumn {
                get {
                    return this.columnTAGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIVACYColumn {
                get {
                    return this.columnPRIVACY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALLOW_COMMENTSColumn {
                get {
                    return this.columnALLOW_COMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL_STATUSColumn {
                get {
                    return this.columnEMAIL_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABUSEColumn {
                get {
                    return this.columnABUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VIEWSColumn {
                get {
                    return this.columnVIEWS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_BLGRow this[int index] {
                get {
                    return ((MOM_BLGRow)(this.Rows[index]));
                }
            }
            
            public event MOM_BLGRowChangeEventHandler MOM_BLGRowChanging;
            
            public event MOM_BLGRowChangeEventHandler MOM_BLGRowChanged;
            
            public event MOM_BLGRowChangeEventHandler MOM_BLGRowDeleting;
            
            public event MOM_BLGRowChangeEventHandler MOM_BLGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_BLGRow(MOM_BLGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_BLGRow AddMOM_BLGRow(long MOM_USR_ID, string TITLE, string BLOG, string TAGS, string PRIVACY, bool ALLOW_COMMENTS, bool EMAIL_STATUS, System.DateTime TIME, bool ABUSE, int VIEWS, short RATE) {
                MOM_BLGRow rowMOM_BLGRow = ((MOM_BLGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_USR_ID,
                        TITLE,
                        BLOG,
                        TAGS,
                        PRIVACY,
                        ALLOW_COMMENTS,
                        EMAIL_STATUS,
                        TIME,
                        ABUSE,
                        VIEWS,
                        RATE};
                rowMOM_BLGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_BLGRow);
                return rowMOM_BLGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_BLGDataTable cln = ((MOM_BLGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_BLGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnTITLE = base.Columns["TITLE"];
                this.columnBLOG = base.Columns["BLOG"];
                this.columnTAGS = base.Columns["TAGS"];
                this.columnPRIVACY = base.Columns["PRIVACY"];
                this.columnALLOW_COMMENTS = base.Columns["ALLOW_COMMENTS"];
                this.columnEMAIL_STATUS = base.Columns["EMAIL_STATUS"];
                this.columnTIME = base.Columns["TIME"];
                this.columnABUSE = base.Columns["ABUSE"];
                this.columnVIEWS = base.Columns["VIEWS"];
                this.columnRATE = base.Columns["RATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.columnBLOG = new global::System.Data.DataColumn("BLOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOG);
                this.columnTAGS = new global::System.Data.DataColumn("TAGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAGS);
                this.columnPRIVACY = new global::System.Data.DataColumn("PRIVACY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIVACY);
                this.columnALLOW_COMMENTS = new global::System.Data.DataColumn("ALLOW_COMMENTS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOW_COMMENTS);
                this.columnEMAIL_STATUS = new global::System.Data.DataColumn("EMAIL_STATUS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL_STATUS);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnABUSE = new global::System.Data.DataColumn("ABUSE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABUSE);
                this.columnVIEWS = new global::System.Data.DataColumn("VIEWS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIEWS);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnTITLE.MaxLength = 100;
                this.columnBLOG.MaxLength = 2147483647;
                this.columnTAGS.MaxLength = 100;
                this.columnPRIVACY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_BLGRow NewMOM_BLGRow() {
                return ((MOM_BLGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_BLGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_BLGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_BLGRowChanged != null)) {
                    this.MOM_BLGRowChanged(this, new MOM_BLGRowChangeEvent(((MOM_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_BLGRowChanging != null)) {
                    this.MOM_BLGRowChanging(this, new MOM_BLGRowChangeEvent(((MOM_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_BLGRowDeleted != null)) {
                    this.MOM_BLGRowDeleted(this, new MOM_BLGRowChangeEvent(((MOM_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_BLGRowDeleting != null)) {
                    this.MOM_BLGRowDeleting(this, new MOM_BLGRowChangeEvent(((MOM_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_BLGRow(MOM_BLGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_BLGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_USR_BLGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTITLE;
            
            private global::System.Data.DataColumn columnBLOG;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_BLGDataTable() {
                this.TableName = "MOM_USR_BLG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_BLGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_USR_BLGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOGColumn {
                get {
                    return this.columnBLOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_BLGRow this[int index] {
                get {
                    return ((MOM_USR_BLGRow)(this.Rows[index]));
                }
            }
            
            public event MOM_USR_BLGRowChangeEventHandler MOM_USR_BLGRowChanging;
            
            public event MOM_USR_BLGRowChangeEventHandler MOM_USR_BLGRowChanged;
            
            public event MOM_USR_BLGRowChangeEventHandler MOM_USR_BLGRowDeleting;
            
            public event MOM_USR_BLGRowChangeEventHandler MOM_USR_BLGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_USR_BLGRow(MOM_USR_BLGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_BLGRow AddMOM_USR_BLGRow(int ID, string TITLE, string BLOG, string TIME, string RATE, long MOM_USR_ID, string DISPLAY_NAME) {
                MOM_USR_BLGRow rowMOM_USR_BLGRow = ((MOM_USR_BLGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        TITLE,
                        BLOG,
                        TIME,
                        RATE,
                        MOM_USR_ID,
                        DISPLAY_NAME};
                rowMOM_USR_BLGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_USR_BLGRow);
                return rowMOM_USR_BLGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_USR_BLGDataTable cln = ((MOM_USR_BLGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_USR_BLGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTITLE = base.Columns["TITLE"];
                this.columnBLOG = base.Columns["BLOG"];
                this.columnTIME = base.Columns["TIME"];
                this.columnRATE = base.Columns["RATE"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.columnBLOG = new global::System.Data.DataColumn("BLOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOG);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_BLGRow NewMOM_USR_BLGRow() {
                return ((MOM_USR_BLGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_USR_BLGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_USR_BLGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_USR_BLGRowChanged != null)) {
                    this.MOM_USR_BLGRowChanged(this, new MOM_USR_BLGRowChangeEvent(((MOM_USR_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_USR_BLGRowChanging != null)) {
                    this.MOM_USR_BLGRowChanging(this, new MOM_USR_BLGRowChangeEvent(((MOM_USR_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_USR_BLGRowDeleted != null)) {
                    this.MOM_USR_BLGRowDeleted(this, new MOM_USR_BLGRowChangeEvent(((MOM_USR_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_USR_BLGRowDeleting != null)) {
                    this.MOM_USR_BLGRowDeleting(this, new MOM_USR_BLGRowChangeEvent(((MOM_USR_BLGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_USR_BLGRow(MOM_USR_BLGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_USR_BLGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_USR_FRNDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnPICTURE;
            
            private global::System.Data.DataColumn columnDISPLAY_NAME;
            
            private global::System.Data.DataColumn columnFULL_NAME;
            
            private global::System.Data.DataColumn columnID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_FRNDDataTable() {
                this.TableName = "MOM_USR_FRND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_FRNDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_USR_FRNDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICTUREColumn {
                get {
                    return this.columnPICTURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISPLAY_NAMEColumn {
                get {
                    return this.columnDISPLAY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FULL_NAMEColumn {
                get {
                    return this.columnFULL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_FRNDRow this[int index] {
                get {
                    return ((MOM_USR_FRNDRow)(this.Rows[index]));
                }
            }
            
            public event MOM_USR_FRNDRowChangeEventHandler MOM_USR_FRNDRowChanging;
            
            public event MOM_USR_FRNDRowChangeEventHandler MOM_USR_FRNDRowChanged;
            
            public event MOM_USR_FRNDRowChangeEventHandler MOM_USR_FRNDRowDeleting;
            
            public event MOM_USR_FRNDRowChangeEventHandler MOM_USR_FRNDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_USR_FRNDRow(MOM_USR_FRNDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_FRNDRow AddMOM_USR_FRNDRow(long MOM_USR_ID, string PICTURE, string DISPLAY_NAME, string FULL_NAME, string ID) {
                MOM_USR_FRNDRow rowMOM_USR_FRNDRow = ((MOM_USR_FRNDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MOM_USR_ID,
                        PICTURE,
                        DISPLAY_NAME,
                        FULL_NAME,
                        ID};
                rowMOM_USR_FRNDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_USR_FRNDRow);
                return rowMOM_USR_FRNDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_USR_FRNDDataTable cln = ((MOM_USR_FRNDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_USR_FRNDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnPICTURE = base.Columns["PICTURE"];
                this.columnDISPLAY_NAME = base.Columns["DISPLAY_NAME"];
                this.columnFULL_NAME = base.Columns["FULL_NAME"];
                this.columnID = base.Columns["ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnPICTURE = new global::System.Data.DataColumn("PICTURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICTURE);
                this.columnDISPLAY_NAME = new global::System.Data.DataColumn("DISPLAY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY_NAME);
                this.columnFULL_NAME = new global::System.Data.DataColumn("FULL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFULL_NAME);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_FRNDRow NewMOM_USR_FRNDRow() {
                return ((MOM_USR_FRNDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_USR_FRNDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_USR_FRNDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_USR_FRNDRowChanged != null)) {
                    this.MOM_USR_FRNDRowChanged(this, new MOM_USR_FRNDRowChangeEvent(((MOM_USR_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_USR_FRNDRowChanging != null)) {
                    this.MOM_USR_FRNDRowChanging(this, new MOM_USR_FRNDRowChangeEvent(((MOM_USR_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_USR_FRNDRowDeleted != null)) {
                    this.MOM_USR_FRNDRowDeleted(this, new MOM_USR_FRNDRowChangeEvent(((MOM_USR_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_USR_FRNDRowDeleting != null)) {
                    this.MOM_USR_FRNDRowDeleting(this, new MOM_USR_FRNDRowChangeEvent(((MOM_USR_FRNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_USR_FRNDRow(MOM_USR_FRNDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_USR_FRNDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_RCPDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnPHOTO;
            
            private global::System.Data.DataColumn columnTAGS;
            
            private global::System.Data.DataColumn columnPREP_TM;
            
            private global::System.Data.DataColumn columnCOOK_TM;
            
            private global::System.Data.DataColumn columnSERVE_TO;
            
            private global::System.Data.DataColumn columnDIFFICULTY;
            
            private global::System.Data.DataColumn columnINGREDIENTS;
            
            private global::System.Data.DataColumn columnMETHOD;
            
            private global::System.Data.DataColumn columnVEGE;
            
            private global::System.Data.DataColumn columnVEGAN;
            
            private global::System.Data.DataColumn columnDAIRY;
            
            private global::System.Data.DataColumn columnGLUTEN;
            
            private global::System.Data.DataColumn columnNUT;
            
            private global::System.Data.DataColumn columnALLOW;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCPDataTable() {
                this.TableName = "MOM_RCP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_RCPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHOTOColumn {
                get {
                    return this.columnPHOTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAGSColumn {
                get {
                    return this.columnTAGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREP_TMColumn {
                get {
                    return this.columnPREP_TM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COOK_TMColumn {
                get {
                    return this.columnCOOK_TM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVE_TOColumn {
                get {
                    return this.columnSERVE_TO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIFFICULTYColumn {
                get {
                    return this.columnDIFFICULTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INGREDIENTSColumn {
                get {
                    return this.columnINGREDIENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn METHODColumn {
                get {
                    return this.columnMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VEGEColumn {
                get {
                    return this.columnVEGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VEGANColumn {
                get {
                    return this.columnVEGAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DAIRYColumn {
                get {
                    return this.columnDAIRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLUTENColumn {
                get {
                    return this.columnGLUTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUTColumn {
                get {
                    return this.columnNUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALLOWColumn {
                get {
                    return this.columnALLOW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCPRow this[int index] {
                get {
                    return ((MOM_RCPRow)(this.Rows[index]));
                }
            }
            
            public event MOM_RCPRowChangeEventHandler MOM_RCPRowChanging;
            
            public event MOM_RCPRowChangeEventHandler MOM_RCPRowChanged;
            
            public event MOM_RCPRowChangeEventHandler MOM_RCPRowDeleting;
            
            public event MOM_RCPRowChangeEventHandler MOM_RCPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_RCPRow(MOM_RCPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCPRow AddMOM_RCPRow(
                        string NAME, 
                        string DESCRIPTION, 
                        string PHOTO, 
                        string TAGS, 
                        string PREP_TM, 
                        string COOK_TM, 
                        string SERVE_TO, 
                        string DIFFICULTY, 
                        string INGREDIENTS, 
                        string METHOD, 
                        bool VEGE, 
                        bool VEGAN, 
                        bool DAIRY, 
                        bool GLUTEN, 
                        bool NUT, 
                        bool ALLOW, 
                        long MOM_USR_ID, 
                        System.DateTime TIME) {
                MOM_RCPRow rowMOM_RCPRow = ((MOM_RCPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME,
                        DESCRIPTION,
                        PHOTO,
                        TAGS,
                        PREP_TM,
                        COOK_TM,
                        SERVE_TO,
                        DIFFICULTY,
                        INGREDIENTS,
                        METHOD,
                        VEGE,
                        VEGAN,
                        DAIRY,
                        GLUTEN,
                        NUT,
                        ALLOW,
                        MOM_USR_ID,
                        TIME};
                rowMOM_RCPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_RCPRow);
                return rowMOM_RCPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_RCPDataTable cln = ((MOM_RCPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_RCPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnPHOTO = base.Columns["PHOTO"];
                this.columnTAGS = base.Columns["TAGS"];
                this.columnPREP_TM = base.Columns["PREP_TM"];
                this.columnCOOK_TM = base.Columns["COOK_TM"];
                this.columnSERVE_TO = base.Columns["SERVE_TO"];
                this.columnDIFFICULTY = base.Columns["DIFFICULTY"];
                this.columnINGREDIENTS = base.Columns["INGREDIENTS"];
                this.columnMETHOD = base.Columns["METHOD"];
                this.columnVEGE = base.Columns["VEGE"];
                this.columnVEGAN = base.Columns["VEGAN"];
                this.columnDAIRY = base.Columns["DAIRY"];
                this.columnGLUTEN = base.Columns["GLUTEN"];
                this.columnNUT = base.Columns["NUT"];
                this.columnALLOW = base.Columns["ALLOW"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnPHOTO = new global::System.Data.DataColumn("PHOTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHOTO);
                this.columnTAGS = new global::System.Data.DataColumn("TAGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAGS);
                this.columnPREP_TM = new global::System.Data.DataColumn("PREP_TM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREP_TM);
                this.columnCOOK_TM = new global::System.Data.DataColumn("COOK_TM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOK_TM);
                this.columnSERVE_TO = new global::System.Data.DataColumn("SERVE_TO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVE_TO);
                this.columnDIFFICULTY = new global::System.Data.DataColumn("DIFFICULTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIFFICULTY);
                this.columnINGREDIENTS = new global::System.Data.DataColumn("INGREDIENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINGREDIENTS);
                this.columnMETHOD = new global::System.Data.DataColumn("METHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD);
                this.columnVEGE = new global::System.Data.DataColumn("VEGE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVEGE);
                this.columnVEGAN = new global::System.Data.DataColumn("VEGAN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVEGAN);
                this.columnDAIRY = new global::System.Data.DataColumn("DAIRY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAIRY);
                this.columnGLUTEN = new global::System.Data.DataColumn("GLUTEN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLUTEN);
                this.columnNUT = new global::System.Data.DataColumn("NUT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUT);
                this.columnALLOW = new global::System.Data.DataColumn("ALLOW", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOW);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 100;
                this.columnDESCRIPTION.MaxLength = 255;
                this.columnPHOTO.MaxLength = 255;
                this.columnTAGS.MaxLength = 255;
                this.columnPREP_TM.MaxLength = 100;
                this.columnCOOK_TM.MaxLength = 100;
                this.columnSERVE_TO.MaxLength = 100;
                this.columnDIFFICULTY.AllowDBNull = false;
                this.columnDIFFICULTY.MaxLength = 100;
                this.columnINGREDIENTS.AllowDBNull = false;
                this.columnINGREDIENTS.MaxLength = 2147483647;
                this.columnMETHOD.AllowDBNull = false;
                this.columnMETHOD.MaxLength = 2147483647;
                this.columnTIME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCPRow NewMOM_RCPRow() {
                return ((MOM_RCPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_RCPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_RCPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_RCPRowChanged != null)) {
                    this.MOM_RCPRowChanged(this, new MOM_RCPRowChangeEvent(((MOM_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_RCPRowChanging != null)) {
                    this.MOM_RCPRowChanging(this, new MOM_RCPRowChangeEvent(((MOM_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_RCPRowDeleted != null)) {
                    this.MOM_RCPRowDeleted(this, new MOM_RCPRowChangeEvent(((MOM_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_RCPRowDeleting != null)) {
                    this.MOM_RCPRowDeleting(this, new MOM_RCPRowChangeEvent(((MOM_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_RCPRow(MOM_RCPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_RCPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_RCP_CMTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_RCP_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_CMTDataTable() {
                this.TableName = "MOM_RCP_CMT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_CMTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_RCP_CMTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_RCP_IDColumn {
                get {
                    return this.columnMOM_RCP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_CMTRow this[int index] {
                get {
                    return ((MOM_RCP_CMTRow)(this.Rows[index]));
                }
            }
            
            public event MOM_RCP_CMTRowChangeEventHandler MOM_RCP_CMTRowChanging;
            
            public event MOM_RCP_CMTRowChangeEventHandler MOM_RCP_CMTRowChanged;
            
            public event MOM_RCP_CMTRowChangeEventHandler MOM_RCP_CMTRowDeleting;
            
            public event MOM_RCP_CMTRowChangeEventHandler MOM_RCP_CMTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_RCP_CMTRow(MOM_RCP_CMTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_CMTRow AddMOM_RCP_CMTRow(int MOM_RCP_ID, long MOM_USR_ID, string COMMENTS, System.DateTime TIME) {
                MOM_RCP_CMTRow rowMOM_RCP_CMTRow = ((MOM_RCP_CMTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_RCP_ID,
                        MOM_USR_ID,
                        COMMENTS,
                        TIME};
                rowMOM_RCP_CMTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_RCP_CMTRow);
                return rowMOM_RCP_CMTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_RCP_CMTDataTable cln = ((MOM_RCP_CMTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_RCP_CMTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_RCP_ID = base.Columns["MOM_RCP_ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_RCP_ID = new global::System.Data.DataColumn("MOM_RCP_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_RCP_ID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnMOM_RCP_ID.AllowDBNull = false;
                this.columnMOM_USR_ID.AllowDBNull = false;
                this.columnCOMMENTS.AllowDBNull = false;
                this.columnCOMMENTS.MaxLength = 2147483647;
                this.columnTIME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_CMTRow NewMOM_RCP_CMTRow() {
                return ((MOM_RCP_CMTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_RCP_CMTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_RCP_CMTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_RCP_CMTRowChanged != null)) {
                    this.MOM_RCP_CMTRowChanged(this, new MOM_RCP_CMTRowChangeEvent(((MOM_RCP_CMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_RCP_CMTRowChanging != null)) {
                    this.MOM_RCP_CMTRowChanging(this, new MOM_RCP_CMTRowChangeEvent(((MOM_RCP_CMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_RCP_CMTRowDeleted != null)) {
                    this.MOM_RCP_CMTRowDeleted(this, new MOM_RCP_CMTRowChangeEvent(((MOM_RCP_CMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_RCP_CMTRowDeleting != null)) {
                    this.MOM_RCP_CMTRowDeleting(this, new MOM_RCP_CMTRowChangeEvent(((MOM_RCP_CMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_RCP_CMTRow(MOM_RCP_CMTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_RCP_CMTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_RCP_RTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_RCP_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_RTDataTable() {
                this.TableName = "MOM_RCP_RT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_RTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_RCP_RTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_RCP_IDColumn {
                get {
                    return this.columnMOM_RCP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_RTRow this[int index] {
                get {
                    return ((MOM_RCP_RTRow)(this.Rows[index]));
                }
            }
            
            public event MOM_RCP_RTRowChangeEventHandler MOM_RCP_RTRowChanging;
            
            public event MOM_RCP_RTRowChangeEventHandler MOM_RCP_RTRowChanged;
            
            public event MOM_RCP_RTRowChangeEventHandler MOM_RCP_RTRowDeleting;
            
            public event MOM_RCP_RTRowChangeEventHandler MOM_RCP_RTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_RCP_RTRow(MOM_RCP_RTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_RTRow AddMOM_RCP_RTRow(int MOM_RCP_ID, long MOM_USR_ID, int RATE, System.DateTime TIME) {
                MOM_RCP_RTRow rowMOM_RCP_RTRow = ((MOM_RCP_RTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_RCP_ID,
                        MOM_USR_ID,
                        RATE,
                        TIME};
                rowMOM_RCP_RTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_RCP_RTRow);
                return rowMOM_RCP_RTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_RCP_RTDataTable cln = ((MOM_RCP_RTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_RCP_RTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_RCP_ID = base.Columns["MOM_RCP_ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnRATE = base.Columns["RATE"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_RCP_ID = new global::System.Data.DataColumn("MOM_RCP_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_RCP_ID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnMOM_RCP_ID.AllowDBNull = false;
                this.columnMOM_USR_ID.AllowDBNull = false;
                this.columnRATE.AllowDBNull = false;
                this.columnTIME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_RTRow NewMOM_RCP_RTRow() {
                return ((MOM_RCP_RTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_RCP_RTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_RCP_RTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_RCP_RTRowChanged != null)) {
                    this.MOM_RCP_RTRowChanged(this, new MOM_RCP_RTRowChangeEvent(((MOM_RCP_RTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_RCP_RTRowChanging != null)) {
                    this.MOM_RCP_RTRowChanging(this, new MOM_RCP_RTRowChangeEvent(((MOM_RCP_RTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_RCP_RTRowDeleted != null)) {
                    this.MOM_RCP_RTRowDeleted(this, new MOM_RCP_RTRowChangeEvent(((MOM_RCP_RTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_RCP_RTRowDeleting != null)) {
                    this.MOM_RCP_RTRowDeleting(this, new MOM_RCP_RTRowChangeEvent(((MOM_RCP_RTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_RCP_RTRow(MOM_RCP_RTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_RCP_RTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_RCP_VIEWDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_RCP_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_VIEWDataTable() {
                this.TableName = "MOM_RCP_VIEW";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_VIEWDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_RCP_VIEWDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_RCP_IDColumn {
                get {
                    return this.columnMOM_RCP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_VIEWRow this[int index] {
                get {
                    return ((MOM_RCP_VIEWRow)(this.Rows[index]));
                }
            }
            
            public event MOM_RCP_VIEWRowChangeEventHandler MOM_RCP_VIEWRowChanging;
            
            public event MOM_RCP_VIEWRowChangeEventHandler MOM_RCP_VIEWRowChanged;
            
            public event MOM_RCP_VIEWRowChangeEventHandler MOM_RCP_VIEWRowDeleting;
            
            public event MOM_RCP_VIEWRowChangeEventHandler MOM_RCP_VIEWRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_RCP_VIEWRow(MOM_RCP_VIEWRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_VIEWRow AddMOM_RCP_VIEWRow(int MOM_RCP_ID, long MOM_USR_ID, System.DateTime TIME) {
                MOM_RCP_VIEWRow rowMOM_RCP_VIEWRow = ((MOM_RCP_VIEWRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_RCP_ID,
                        MOM_USR_ID,
                        TIME};
                rowMOM_RCP_VIEWRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_RCP_VIEWRow);
                return rowMOM_RCP_VIEWRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_RCP_VIEWDataTable cln = ((MOM_RCP_VIEWDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_RCP_VIEWDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_RCP_ID = base.Columns["MOM_RCP_ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_RCP_ID = new global::System.Data.DataColumn("MOM_RCP_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_RCP_ID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnMOM_RCP_ID.AllowDBNull = false;
                this.columnMOM_USR_ID.AllowDBNull = false;
                this.columnTIME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_VIEWRow NewMOM_RCP_VIEWRow() {
                return ((MOM_RCP_VIEWRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_RCP_VIEWRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_RCP_VIEWRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_RCP_VIEWRowChanged != null)) {
                    this.MOM_RCP_VIEWRowChanged(this, new MOM_RCP_VIEWRowChangeEvent(((MOM_RCP_VIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_RCP_VIEWRowChanging != null)) {
                    this.MOM_RCP_VIEWRowChanging(this, new MOM_RCP_VIEWRowChangeEvent(((MOM_RCP_VIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_RCP_VIEWRowDeleted != null)) {
                    this.MOM_RCP_VIEWRowDeleted(this, new MOM_RCP_VIEWRowChangeEvent(((MOM_RCP_VIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_RCP_VIEWRowDeleting != null)) {
                    this.MOM_RCP_VIEWRowDeleting(this, new MOM_RCP_VIEWRowChangeEvent(((MOM_RCP_VIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_RCP_VIEWRow(MOM_RCP_VIEWRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_RCP_VIEWDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_FRGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnSHARE;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnTYPE_SHARE;
            
            private global::System.Data.DataColumn columnTIME;
            
            private global::System.Data.DataColumn columnHIDE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRGDataTable() {
                this.TableName = "MOM_FRG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_FRGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHAREColumn {
                get {
                    return this.columnSHARE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_SHAREColumn {
                get {
                    return this.columnTYPE_SHARE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIDEColumn {
                get {
                    return this.columnHIDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRGRow this[int index] {
                get {
                    return ((MOM_FRGRow)(this.Rows[index]));
                }
            }
            
            public event MOM_FRGRowChangeEventHandler MOM_FRGRowChanging;
            
            public event MOM_FRGRowChangeEventHandler MOM_FRGRowChanged;
            
            public event MOM_FRGRowChangeEventHandler MOM_FRGRowDeleting;
            
            public event MOM_FRGRowChangeEventHandler MOM_FRGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_FRGRow(MOM_FRGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRGRow AddMOM_FRGRow(long MOM_USR_ID, string SHARE, string TYPE, string TYPE_SHARE, System.DateTime TIME, bool HIDE) {
                MOM_FRGRow rowMOM_FRGRow = ((MOM_FRGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_USR_ID,
                        SHARE,
                        TYPE,
                        TYPE_SHARE,
                        TIME,
                        HIDE};
                rowMOM_FRGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_FRGRow);
                return rowMOM_FRGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_FRGDataTable cln = ((MOM_FRGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_FRGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnSHARE = base.Columns["SHARE"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnTYPE_SHARE = base.Columns["TYPE_SHARE"];
                this.columnTIME = base.Columns["TIME"];
                this.columnHIDE = base.Columns["HIDE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnSHARE = new global::System.Data.DataColumn("SHARE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnTYPE_SHARE = new global::System.Data.DataColumn("TYPE_SHARE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_SHARE);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnHIDE = new global::System.Data.DataColumn("HIDE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIDE);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnSHARE.MaxLength = 255;
                this.columnTYPE.MaxLength = 1;
                this.columnTYPE_SHARE.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRGRow NewMOM_FRGRow() {
                return ((MOM_FRGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_FRGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_FRGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_FRGRowChanged != null)) {
                    this.MOM_FRGRowChanged(this, new MOM_FRGRowChangeEvent(((MOM_FRGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_FRGRowChanging != null)) {
                    this.MOM_FRGRowChanging(this, new MOM_FRGRowChangeEvent(((MOM_FRGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_FRGRowDeleted != null)) {
                    this.MOM_FRGRowDeleted(this, new MOM_FRGRowChangeEvent(((MOM_FRGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_FRGRowDeleting != null)) {
                    this.MOM_FRGRowDeleting(this, new MOM_FRGRowChangeEvent(((MOM_FRGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_FRGRow(MOM_FRGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_FRGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_FAV_RCPDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMOM_RCP_ID;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnTIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FAV_RCPDataTable() {
                this.TableName = "MOM_FAV_RCP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FAV_RCPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_FAV_RCPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_RCP_IDColumn {
                get {
                    return this.columnMOM_RCP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEColumn {
                get {
                    return this.columnTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FAV_RCPRow this[int index] {
                get {
                    return ((MOM_FAV_RCPRow)(this.Rows[index]));
                }
            }
            
            public event MOM_FAV_RCPRowChangeEventHandler MOM_FAV_RCPRowChanging;
            
            public event MOM_FAV_RCPRowChangeEventHandler MOM_FAV_RCPRowChanged;
            
            public event MOM_FAV_RCPRowChangeEventHandler MOM_FAV_RCPRowDeleting;
            
            public event MOM_FAV_RCPRowChangeEventHandler MOM_FAV_RCPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_FAV_RCPRow(MOM_FAV_RCPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FAV_RCPRow AddMOM_FAV_RCPRow(int MOM_RCP_ID, long MOM_USR_ID, System.DateTime TIME) {
                MOM_FAV_RCPRow rowMOM_FAV_RCPRow = ((MOM_FAV_RCPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOM_RCP_ID,
                        MOM_USR_ID,
                        TIME};
                rowMOM_FAV_RCPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_FAV_RCPRow);
                return rowMOM_FAV_RCPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_FAV_RCPDataTable cln = ((MOM_FAV_RCPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_FAV_RCPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMOM_RCP_ID = base.Columns["MOM_RCP_ID"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnTIME = base.Columns["TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMOM_RCP_ID = new global::System.Data.DataColumn("MOM_RCP_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_RCP_ID);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnTIME = new global::System.Data.DataColumn("TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME);
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnMOM_RCP_ID.AllowDBNull = false;
                this.columnMOM_USR_ID.AllowDBNull = false;
                this.columnTIME.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FAV_RCPRow NewMOM_FAV_RCPRow() {
                return ((MOM_FAV_RCPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_FAV_RCPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_FAV_RCPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_FAV_RCPRowChanged != null)) {
                    this.MOM_FAV_RCPRowChanged(this, new MOM_FAV_RCPRowChangeEvent(((MOM_FAV_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_FAV_RCPRowChanging != null)) {
                    this.MOM_FAV_RCPRowChanging(this, new MOM_FAV_RCPRowChangeEvent(((MOM_FAV_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_FAV_RCPRowDeleted != null)) {
                    this.MOM_FAV_RCPRowDeleted(this, new MOM_FAV_RCPRowChangeEvent(((MOM_FAV_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_FAV_RCPRowDeleting != null)) {
                    this.MOM_FAV_RCPRowDeleting(this, new MOM_FAV_RCPRowChangeEvent(((MOM_FAV_RCPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_FAV_RCPRow(MOM_FAV_RCPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_FAV_RCPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOM_RCP_SEARCHDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnPHOTO;
            
            private global::System.Data.DataColumn columnCOOKINGTIME;
            
            private global::System.Data.DataColumn columnMOM_USR_ID;
            
            private global::System.Data.DataColumn columnSUBMITTEDBY;
            
            private global::System.Data.DataColumn columnVIEWS;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            private global::System.Data.DataColumn columnRATING;
            
            private global::System.Data.DataColumn columnRATINGS;
            
            private global::System.Data.DataColumn columnRATINGPHOTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_SEARCHDataTable() {
                this.TableName = "MOM_RCP_SEARCH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_SEARCHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOM_RCP_SEARCHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHOTOColumn {
                get {
                    return this.columnPHOTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COOKINGTIMEColumn {
                get {
                    return this.columnCOOKINGTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOM_USR_IDColumn {
                get {
                    return this.columnMOM_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUBMITTEDBYColumn {
                get {
                    return this.columnSUBMITTEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VIEWSColumn {
                get {
                    return this.columnVIEWS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATINGColumn {
                get {
                    return this.columnRATING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATINGSColumn {
                get {
                    return this.columnRATINGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATINGPHOTOColumn {
                get {
                    return this.columnRATINGPHOTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_SEARCHRow this[int index] {
                get {
                    return ((MOM_RCP_SEARCHRow)(this.Rows[index]));
                }
            }
            
            public event MOM_RCP_SEARCHRowChangeEventHandler MOM_RCP_SEARCHRowChanging;
            
            public event MOM_RCP_SEARCHRowChangeEventHandler MOM_RCP_SEARCHRowChanged;
            
            public event MOM_RCP_SEARCHRowChangeEventHandler MOM_RCP_SEARCHRowDeleting;
            
            public event MOM_RCP_SEARCHRowChangeEventHandler MOM_RCP_SEARCHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOM_RCP_SEARCHRow(MOM_RCP_SEARCHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_SEARCHRow AddMOM_RCP_SEARCHRow(int ID, string NAME, string DESCRIPTION, string PHOTO, string COOKINGTIME, string MOM_USR_ID, string SUBMITTEDBY, string VIEWS, string COMMENTS, string RATING, string RATINGS, string RATINGPHOTO) {
                MOM_RCP_SEARCHRow rowMOM_RCP_SEARCHRow = ((MOM_RCP_SEARCHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        NAME,
                        DESCRIPTION,
                        PHOTO,
                        COOKINGTIME,
                        MOM_USR_ID,
                        SUBMITTEDBY,
                        VIEWS,
                        COMMENTS,
                        RATING,
                        RATINGS,
                        RATINGPHOTO};
                rowMOM_RCP_SEARCHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOM_RCP_SEARCHRow);
                return rowMOM_RCP_SEARCHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOM_RCP_SEARCHDataTable cln = ((MOM_RCP_SEARCHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOM_RCP_SEARCHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnPHOTO = base.Columns["PHOTO"];
                this.columnCOOKINGTIME = base.Columns["COOKINGTIME"];
                this.columnMOM_USR_ID = base.Columns["MOM_USR_ID"];
                this.columnSUBMITTEDBY = base.Columns["SUBMITTEDBY"];
                this.columnVIEWS = base.Columns["VIEWS"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
                this.columnRATING = base.Columns["RATING"];
                this.columnRATINGS = base.Columns["RATINGS"];
                this.columnRATINGPHOTO = base.Columns["RATINGPHOTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnPHOTO = new global::System.Data.DataColumn("PHOTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHOTO);
                this.columnCOOKINGTIME = new global::System.Data.DataColumn("COOKINGTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOKINGTIME);
                this.columnMOM_USR_ID = new global::System.Data.DataColumn("MOM_USR_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOM_USR_ID);
                this.columnSUBMITTEDBY = new global::System.Data.DataColumn("SUBMITTEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBMITTEDBY);
                this.columnVIEWS = new global::System.Data.DataColumn("VIEWS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIEWS);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.columnRATING = new global::System.Data.DataColumn("RATING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATING);
                this.columnRATINGS = new global::System.Data.DataColumn("RATINGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATINGS);
                this.columnRATINGPHOTO = new global::System.Data.DataColumn("RATINGPHOTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATINGPHOTO);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_SEARCHRow NewMOM_RCP_SEARCHRow() {
                return ((MOM_RCP_SEARCHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOM_RCP_SEARCHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOM_RCP_SEARCHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOM_RCP_SEARCHRowChanged != null)) {
                    this.MOM_RCP_SEARCHRowChanged(this, new MOM_RCP_SEARCHRowChangeEvent(((MOM_RCP_SEARCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOM_RCP_SEARCHRowChanging != null)) {
                    this.MOM_RCP_SEARCHRowChanging(this, new MOM_RCP_SEARCHRowChangeEvent(((MOM_RCP_SEARCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOM_RCP_SEARCHRowDeleted != null)) {
                    this.MOM_RCP_SEARCHRowDeleted(this, new MOM_RCP_SEARCHRowChangeEvent(((MOM_RCP_SEARCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOM_RCP_SEARCHRowDeleting != null)) {
                    this.MOM_RCP_SEARCHRowDeleting(this, new MOM_RCP_SEARCHRowChangeEvent(((MOM_RCP_SEARCHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOM_RCP_SEARCHRow(MOM_RCP_SEARCHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOMDataset ds = new MOMDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOM_RCP_SEARCHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_USRRow : global::System.Data.DataRow {
            
            private MOM_USRDataTable tableMOM_USR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_USR = ((MOM_USRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableMOM_USR.IDColumn]));
                }
                set {
                    this[this.tableMOM_USR.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL_ADDR {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.EMAIL_ADDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL_ADDR\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.EMAIL_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASSWORD {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.PASSWORDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PASSWORD\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIRST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.FIRST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIRST_NAME\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.FIRST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.LAST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST_NAME\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.LAST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FULL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.FULL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FULL_NAME\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.FULL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_USR.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NEWLETTER {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_USR.NEWLETTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEWLETTER\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.NEWLETTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_USR.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_LOGIN_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_USR.LAST_LOGIN_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST_LOGIN_DATE\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.LAST_LOGIN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ACTIVE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_USR.ACTIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACTIVE\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BLOCKED {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_USR.BLOCKEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOCKED\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.BLOCKEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICTURE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR.PICTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICTURE\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.PICTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PICTURE_STATUS {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_USR.PICTURE_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICTURE_STATUS\' in table \'MOM_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR.PICTURE_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_ADDRNull() {
                return this.IsNull(this.tableMOM_USR.EMAIL_ADDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_ADDRNull() {
                this[this.tableMOM_USR.EMAIL_ADDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSWORDNull() {
                return this.IsNull(this.tableMOM_USR.PASSWORDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSWORDNull() {
                this[this.tableMOM_USR.PASSWORDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIRST_NAMENull() {
                return this.IsNull(this.tableMOM_USR.FIRST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIRST_NAMENull() {
                this[this.tableMOM_USR.FIRST_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_NAMENull() {
                return this.IsNull(this.tableMOM_USR.LAST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_NAMENull() {
                this[this.tableMOM_USR.LAST_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFULL_NAMENull() {
                return this.IsNull(this.tableMOM_USR.FULL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFULL_NAMENull() {
                this[this.tableMOM_USR.FULL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEXNull() {
                return this.IsNull(this.tableMOM_USR.SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEXNull() {
                this[this.tableMOM_USR.SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableMOM_USR.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableMOM_USR.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_USR.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_USR.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNEWLETTERNull() {
                return this.IsNull(this.tableMOM_USR.NEWLETTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNEWLETTERNull() {
                this[this.tableMOM_USR.NEWLETTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_USR.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_USR.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_LOGIN_DATENull() {
                return this.IsNull(this.tableMOM_USR.LAST_LOGIN_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_LOGIN_DATENull() {
                this[this.tableMOM_USR.LAST_LOGIN_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTIVENull() {
                return this.IsNull(this.tableMOM_USR.ACTIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTIVENull() {
                this[this.tableMOM_USR.ACTIVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOCKEDNull() {
                return this.IsNull(this.tableMOM_USR.BLOCKEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOCKEDNull() {
                this[this.tableMOM_USR.BLOCKEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICTURENull() {
                return this.IsNull(this.tableMOM_USR.PICTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICTURENull() {
                this[this.tableMOM_USR.PICTUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICTURE_STATUSNull() {
                return this.IsNull(this.tableMOM_USR.PICTURE_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICTURE_STATUSNull() {
                this[this.tableMOM_USR.PICTURE_STATUSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_FRND_RQSTRow : global::System.Data.DataRow {
            
            private MOM_FRND_RQSTDataTable tableMOM_FRND_RQST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRND_RQSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_FRND_RQST = ((MOM_FRND_RQSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_FRND_RQST.IDColumn]));
                }
                set {
                    this[this.tableMOM_FRND_RQST.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRND_RQST.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_FRND_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRND_RQST.MOM_FRND_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_FRND_USR_ID\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.MOM_FRND_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUBJECT {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRND_RQST.SUBJECTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBJECT\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.SUBJECTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MESSAGE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRND_RQST.MESSAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MESSAGE\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.MESSAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool OPENED {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_FRND_RQST.OPENEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPENED\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.OPENEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FLAG {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_FRND_RQST.FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLAG\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ARCHIVE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_FRND_RQST.ARCHIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARCHIVE\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.ARCHIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_FRND_RQST.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_FRND_RQST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND_RQST.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRND_RQST.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_FRND_RQST.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_FRND_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRND_RQST.MOM_FRND_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_FRND_USR_IDNull() {
                this[this.tableMOM_FRND_RQST.MOM_FRND_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUBJECTNull() {
                return this.IsNull(this.tableMOM_FRND_RQST.SUBJECTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUBJECTNull() {
                this[this.tableMOM_FRND_RQST.SUBJECTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMESSAGENull() {
                return this.IsNull(this.tableMOM_FRND_RQST.MESSAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMESSAGENull() {
                this[this.tableMOM_FRND_RQST.MESSAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPENEDNull() {
                return this.IsNull(this.tableMOM_FRND_RQST.OPENEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPENEDNull() {
                this[this.tableMOM_FRND_RQST.OPENEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLAGNull() {
                return this.IsNull(this.tableMOM_FRND_RQST.FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLAGNull() {
                this[this.tableMOM_FRND_RQST.FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsARCHIVENull() {
                return this.IsNull(this.tableMOM_FRND_RQST.ARCHIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetARCHIVENull() {
                this[this.tableMOM_FRND_RQST.ARCHIVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_FRND_RQST.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_FRND_RQST.TIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_FRNDRow : global::System.Data.DataRow {
            
            private MOM_FRNDDataTable tableMOM_FRND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRNDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_FRND = ((MOM_FRNDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ID {
                get {
                    return ((long)(this[this.tableMOM_FRND.IDColumn]));
                }
                set {
                    this[this.tableMOM_FRND.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRND.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FRND_MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRND.FRND_MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FRND_MOM_USR_ID\' in table \'MOM_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND.FRND_MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_FRND.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BLOCKED {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_FRND.BLOCKEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOCKED\' in table \'MOM_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRND.BLOCKEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRND.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_FRND.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFRND_MOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRND.FRND_MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFRND_MOM_USR_IDNull() {
                this[this.tableMOM_FRND.FRND_MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_FRND.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_FRND.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOCKEDNull() {
                return this.IsNull(this.tableMOM_FRND.BLOCKEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOCKEDNull() {
                this[this.tableMOM_FRND.BLOCKEDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_ANWSRow : global::System.Data.DataRow {
            
            private MOM_ANWSDataTable tableMOM_ANWS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_ANWSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_ANWS = ((MOM_ANWSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_ANWS.IDColumn]));
                }
                set {
                    this[this.tableMOM_ANWS.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_ANWS.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_ANWS.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_QSTN_ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_ANWS.MOM_QSTN_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_QSTN_ID\' in table \'MOM_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_ANWS.MOM_QSTN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ANSWER {
                get {
                    try {
                        return ((string)(this[this.tableMOM_ANWS.ANSWERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANSWER\' in table \'MOM_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_ANWS.ANSWERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_ANWS.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_ANWS.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ABUSE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_ANWS.ABUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABUSE\' in table \'MOM_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_ANWS.ABUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_ANWS.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_ANWS.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_QSTN_IDNull() {
                return this.IsNull(this.tableMOM_ANWS.MOM_QSTN_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_QSTN_IDNull() {
                this[this.tableMOM_ANWS.MOM_QSTN_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANSWERNull() {
                return this.IsNull(this.tableMOM_ANWS.ANSWERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANSWERNull() {
                this[this.tableMOM_ANWS.ANSWERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_ANWS.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_ANWS.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABUSENull() {
                return this.IsNull(this.tableMOM_ANWS.ABUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABUSENull() {
                this[this.tableMOM_ANWS.ABUSEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_CATGRow : global::System.Data.DataRow {
            
            private MOM_CATGDataTable tableMOM_CATG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_CATGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_CATG = ((MOM_CATGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_CATG.IDColumn]));
                }
                set {
                    this[this.tableMOM_CATG.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_CATG.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'MOM_CATG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_CATG.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableMOM_CATG.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableMOM_CATG.NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_USR_QSTNRow : global::System.Data.DataRow {
            
            private MOM_USR_QSTNDataTable tableMOM_USR_QSTN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_QSTNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_USR_QSTN = ((MOM_USR_QSTNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_USR_QSTN.IDColumn]));
                }
                set {
                    this[this.tableMOM_USR_QSTN.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUESTION {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_QSTN.QUESTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUESTION\' in table \'MOM_USR_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_QSTN.QUESTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_QSTN.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_USR_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_QSTN.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_CATG_ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_USR_QSTN.MOM_CATG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_CATG_ID\' in table \'MOM_USR_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_QSTN.MOM_CATG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_USR_QSTN.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_USR_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_QSTN.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_QSTN.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_USR_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_QSTN.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ANSWERS_COUNT {
                get {
                    try {
                        return ((int)(this[this.tableMOM_USR_QSTN.ANSWERS_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANSWERS_COUNT\' in table \'MOM_USR_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_QSTN.ANSWERS_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICTURE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_QSTN.PICTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICTURE\' in table \'MOM_USR_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_QSTN.PICTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUESTIONNull() {
                return this.IsNull(this.tableMOM_USR_QSTN.QUESTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUESTIONNull() {
                this[this.tableMOM_USR_QSTN.QUESTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_USR_QSTN.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_USR_QSTN.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_CATG_IDNull() {
                return this.IsNull(this.tableMOM_USR_QSTN.MOM_CATG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_CATG_IDNull() {
                this[this.tableMOM_USR_QSTN.MOM_CATG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_USR_QSTN.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_USR_QSTN.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_USR_QSTN.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_USR_QSTN.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANSWERS_COUNTNull() {
                return this.IsNull(this.tableMOM_USR_QSTN.ANSWERS_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANSWERS_COUNTNull() {
                this[this.tableMOM_USR_QSTN.ANSWERS_COUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICTURENull() {
                return this.IsNull(this.tableMOM_USR_QSTN.PICTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICTURENull() {
                this[this.tableMOM_USR_QSTN.PICTUREColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_USR_ANWSRow : global::System.Data.DataRow {
            
            private MOM_USR_ANWSDataTable tableMOM_USR_ANWS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_ANWSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_USR_ANWS = ((MOM_USR_ANWSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ANSWER {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_ANWS.ANSWERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANSWER\' in table \'MOM_USR_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_ANWS.ANSWERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_ANWS.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_USR_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_ANWS.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_ANWS.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_USR_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_ANWS.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICTURE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_ANWS.PICTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICTURE\' in table \'MOM_USR_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_ANWS.PICTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_USR_ANWS.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_USR_ANWS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_ANWS.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANSWERNull() {
                return this.IsNull(this.tableMOM_USR_ANWS.ANSWERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANSWERNull() {
                this[this.tableMOM_USR_ANWS.ANSWERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_USR_ANWS.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_USR_ANWS.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_USR_ANWS.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_USR_ANWS.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICTURENull() {
                return this.IsNull(this.tableMOM_USR_ANWS.PICTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICTURENull() {
                this[this.tableMOM_USR_ANWS.PICTUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_USR_ANWS.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_USR_ANWS.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_QSTNRow : global::System.Data.DataRow {
            
            private MOM_QSTNDataTable tableMOM_QSTN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_QSTNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_QSTN = ((MOM_QSTNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_QSTN.IDColumn]));
                }
                set {
                    this[this.tableMOM_QSTN.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_QSTN.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_CATG_ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_QSTN.MOM_CATG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_CATG_ID\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.MOM_CATG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUESTION {
                get {
                    try {
                        return ((string)(this[this.tableMOM_QSTN.QUESTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUESTION\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.QUESTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableMOM_QSTN.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool STATUS {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_QSTN.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_QSTN.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ABUSE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_QSTN.ABUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABUSE\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.ABUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_QSTN.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EMAIL_STATUS {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_QSTN.EMAIL_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL_STATUS\' in table \'MOM_QSTN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_QSTN.EMAIL_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_QSTN.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_QSTN.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_CATG_IDNull() {
                return this.IsNull(this.tableMOM_QSTN.MOM_CATG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_CATG_IDNull() {
                this[this.tableMOM_QSTN.MOM_CATG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUESTIONNull() {
                return this.IsNull(this.tableMOM_QSTN.QUESTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUESTIONNull() {
                this[this.tableMOM_QSTN.QUESTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableMOM_QSTN.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableMOM_QSTN.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableMOM_QSTN.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableMOM_QSTN.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_QSTN.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_QSTN.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABUSENull() {
                return this.IsNull(this.tableMOM_QSTN.ABUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABUSENull() {
                this[this.tableMOM_QSTN.ABUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_QSTN.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_QSTN.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_STATUSNull() {
                return this.IsNull(this.tableMOM_QSTN.EMAIL_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_STATUSNull() {
                this[this.tableMOM_QSTN.EMAIL_STATUSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_IP_TRKRow : global::System.Data.DataRow {
            
            private MOM_IP_TRKDataTable tableMOM_IP_TRK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_IP_TRKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_IP_TRK = ((MOM_IP_TRKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_IP_TRK.IDColumn]));
                }
                set {
                    this[this.tableMOM_IP_TRK.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IP_ADR {
                get {
                    try {
                        return ((string)(this[this.tableMOM_IP_TRK.IP_ADRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_ADR\' in table \'MOM_IP_TRK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_IP_TRK.IP_ADRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_IP_TRK.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_IP_TRK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_IP_TRK.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_IP_TRK.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_IP_TRK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_IP_TRK.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIP_ADRNull() {
                return this.IsNull(this.tableMOM_IP_TRK.IP_ADRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIP_ADRNull() {
                this[this.tableMOM_IP_TRK.IP_ADRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_IP_TRK.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_IP_TRK.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_IP_TRK.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_IP_TRK.TIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_FRG_SHAREDRow : global::System.Data.DataRow {
            
            private MOM_FRG_SHAREDDataTable tableMOM_FRG_SHARED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRG_SHAREDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_FRG_SHARED = ((MOM_FRG_SHAREDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_FRG_SHARED.IDColumn]));
                }
                set {
                    this[this.tableMOM_FRG_SHARED.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRG_SHARED.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_FRG_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_SHARED.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHARE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_SHARED.SHAREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARE\' in table \'MOM_FRG_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_SHARED.SHAREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_SHARED.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_FRG_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_SHARED.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_SHARED.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_FRG_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_SHARED.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICTURE {
                get {
                    return ((string)(this[this.tableMOM_FRG_SHARED.PICTUREColumn]));
                }
                set {
                    this[this.tableMOM_FRG_SHARED.PICTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HIDE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_FRG_SHARED.HIDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIDE\' in table \'MOM_FRG_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_SHARED.HIDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_SHARE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_SHARED.TYPE_SHAREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_SHARE\' in table \'MOM_FRG_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_SHARED.TYPE_SHAREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_SHARED.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'MOM_FRG_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_SHARED.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRG_SHARED.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_FRG_SHARED.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHARENull() {
                return this.IsNull(this.tableMOM_FRG_SHARED.SHAREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHARENull() {
                this[this.tableMOM_FRG_SHARED.SHAREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_FRG_SHARED.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_FRG_SHARED.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_FRG_SHARED.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_FRG_SHARED.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIDENull() {
                return this.IsNull(this.tableMOM_FRG_SHARED.HIDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIDENull() {
                this[this.tableMOM_FRG_SHARED.HIDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_SHARENull() {
                return this.IsNull(this.tableMOM_FRG_SHARED.TYPE_SHAREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_SHARENull() {
                this[this.tableMOM_FRG_SHARED.TYPE_SHAREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tableMOM_FRG_SHARED.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tableMOM_FRG_SHARED.TYPEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_FRG_CMNTRow : global::System.Data.DataRow {
            
            private MOM_FRG_CMNTDataTable tableMOM_FRG_CMNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRG_CMNTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_FRG_CMNT = ((MOM_FRG_CMNTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_FRG_CMNT.IDColumn]));
                }
                set {
                    this[this.tableMOM_FRG_CMNT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_FRG_ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_FRG_CMNT.MOM_FRG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_FRG_ID\' in table \'MOM_FRG_CMNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT.MOM_FRG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRG_CMNT.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_FRG_CMNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_CMNT.COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMENTS\' in table \'MOM_FRG_CMNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_FRG_CMNT.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_FRG_CMNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_FRG_IDNull() {
                return this.IsNull(this.tableMOM_FRG_CMNT.MOM_FRG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_FRG_IDNull() {
                this[this.tableMOM_FRG_CMNT.MOM_FRG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRG_CMNT.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_FRG_CMNT.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMENTSNull() {
                return this.IsNull(this.tableMOM_FRG_CMNT.COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMENTSNull() {
                this[this.tableMOM_FRG_CMNT.COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_FRG_CMNT.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_FRG_CMNT.TIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_FRG_CMNT_SHAREDRow : global::System.Data.DataRow {
            
            private MOM_FRG_CMNT_SHAREDDataTable tableMOM_FRG_CMNT_SHARED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRG_CMNT_SHAREDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_FRG_CMNT_SHARED = ((MOM_FRG_CMNT_SHAREDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_FRG_CMNT_SHARED.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'MOM_FRG_CMNT_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT_SHARED.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_CMNT_SHARED.COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMENTS\' in table \'MOM_FRG_CMNT_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT_SHARED.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_CMNT_SHARED.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_FRG_CMNT_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT_SHARED.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_CMNT_SHARED.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_FRG_CMNT_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT_SHARED.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICTURE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG_CMNT_SHARED.PICTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICTURE\' in table \'MOM_FRG_CMNT_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT_SHARED.PICTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_FRG_ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_FRG_CMNT_SHARED.MOM_FRG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_FRG_ID\' in table \'MOM_FRG_CMNT_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT_SHARED.MOM_FRG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRG_CMNT_SHARED.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_FRG_CMNT_SHARED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG_CMNT_SHARED.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableMOM_FRG_CMNT_SHARED.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableMOM_FRG_CMNT_SHARED.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMENTSNull() {
                return this.IsNull(this.tableMOM_FRG_CMNT_SHARED.COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMENTSNull() {
                this[this.tableMOM_FRG_CMNT_SHARED.COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_FRG_CMNT_SHARED.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_FRG_CMNT_SHARED.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_FRG_CMNT_SHARED.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_FRG_CMNT_SHARED.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICTURENull() {
                return this.IsNull(this.tableMOM_FRG_CMNT_SHARED.PICTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICTURENull() {
                this[this.tableMOM_FRG_CMNT_SHARED.PICTUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_FRG_IDNull() {
                return this.IsNull(this.tableMOM_FRG_CMNT_SHARED.MOM_FRG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_FRG_IDNull() {
                this[this.tableMOM_FRG_CMNT_SHARED.MOM_FRG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRG_CMNT_SHARED.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_FRG_CMNT_SHARED.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_IMPT_EMAILRow : global::System.Data.DataRow {
            
            private MOM_IMPT_EMAILDataTable tableMOM_IMPT_EMAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_IMPT_EMAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_IMPT_EMAIL = ((MOM_IMPT_EMAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    return ((string)(this[this.tableMOM_IMPT_EMAIL.NAMEColumn]));
                }
                set {
                    this[this.tableMOM_IMPT_EMAIL.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableMOM_IMPT_EMAIL.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'MOM_IMPT_EMAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_IMPT_EMAIL.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableMOM_IMPT_EMAIL.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableMOM_IMPT_EMAIL.EMAILColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_GRPRow : global::System.Data.DataRow {
            
            private MOM_GRPDataTable tableMOM_GRP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_GRPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_GRP = ((MOM_GRPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_GRP.IDColumn]));
                }
                set {
                    this[this.tableMOM_GRP.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RECENT_NEWS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.RECENT_NEWSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECENT_NEWS\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.RECENT_NEWSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OFFICE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.OFFICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFFICE\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.OFFICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL_ADDR {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.EMAIL_ADDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL_ADDR\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.EMAIL_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STREET {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.STREETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STREET\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.STREETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CITY {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP.CITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CITY\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_GRP.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BLOCKED {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_GRP.BLOCKEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOCKED\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.BLOCKEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BLOCKED_TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_GRP.BLOCKED_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOCKED_TIME\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.BLOCKED_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_GRP.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MEMBERS {
                get {
                    try {
                        return ((int)(this[this.tableMOM_GRP.MEMBERSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBERS\' in table \'MOM_GRP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP.MEMBERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableMOM_GRP.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableMOM_GRP.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableMOM_GRP.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableMOM_GRP.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tableMOM_GRP.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tableMOM_GRP.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRECENT_NEWSNull() {
                return this.IsNull(this.tableMOM_GRP.RECENT_NEWSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRECENT_NEWSNull() {
                this[this.tableMOM_GRP.RECENT_NEWSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOFFICENull() {
                return this.IsNull(this.tableMOM_GRP.OFFICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOFFICENull() {
                this[this.tableMOM_GRP.OFFICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_ADDRNull() {
                return this.IsNull(this.tableMOM_GRP.EMAIL_ADDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_ADDRNull() {
                this[this.tableMOM_GRP.EMAIL_ADDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTREETNull() {
                return this.IsNull(this.tableMOM_GRP.STREETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTREETNull() {
                this[this.tableMOM_GRP.STREETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCITYNull() {
                return this.IsNull(this.tableMOM_GRP.CITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCITYNull() {
                this[this.tableMOM_GRP.CITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_GRP.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_GRP.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOCKEDNull() {
                return this.IsNull(this.tableMOM_GRP.BLOCKEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOCKEDNull() {
                this[this.tableMOM_GRP.BLOCKEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOCKED_TIMENull() {
                return this.IsNull(this.tableMOM_GRP.BLOCKED_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOCKED_TIMENull() {
                this[this.tableMOM_GRP.BLOCKED_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_GRP.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_GRP.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEMBERSNull() {
                return this.IsNull(this.tableMOM_GRP.MEMBERSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEMBERSNull() {
                this[this.tableMOM_GRP.MEMBERSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_GRP_USRRow : global::System.Data.DataRow {
            
            private MOM_GRP_USRDataTable tableMOM_GRP_USR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_GRP_USRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_GRP_USR = ((MOM_GRP_USRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_GRP_ID {
                get {
                    return ((int)(this[this.tableMOM_GRP_USR.MOM_GRP_IDColumn]));
                }
                set {
                    this[this.tableMOM_GRP_USR.MOM_GRP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOM_GRP_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP_USR.MOM_GRP_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_GRP_NAME\' in table \'MOM_GRP_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP_USR.MOM_GRP_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    return ((long)(this[this.tableMOM_GRP_USR.MOM_USR_IDColumn]));
                }
                set {
                    this[this.tableMOM_GRP_USR.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOM_USR_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP_USR.MOM_USR_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_NAME\' in table \'MOM_GRP_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP_USR.MOM_USR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_GRP_MEMBERS {
                get {
                    try {
                        return ((int)(this[this.tableMOM_GRP_USR.MOM_GRP_MEMBERSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_GRP_MEMBERS\' in table \'MOM_GRP_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP_USR.MOM_GRP_MEMBERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MEMBERS {
                get {
                    try {
                        return ((int)(this[this.tableMOM_GRP_USR.MEMBERSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBERS\' in table \'MOM_GRP_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP_USR.MEMBERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableMOM_GRP_USR.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'MOM_GRP_USR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_GRP_USR.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_GRP_NAMENull() {
                return this.IsNull(this.tableMOM_GRP_USR.MOM_GRP_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_GRP_NAMENull() {
                this[this.tableMOM_GRP_USR.MOM_GRP_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_NAMENull() {
                return this.IsNull(this.tableMOM_GRP_USR.MOM_USR_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_NAMENull() {
                this[this.tableMOM_GRP_USR.MOM_USR_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_GRP_MEMBERSNull() {
                return this.IsNull(this.tableMOM_GRP_USR.MOM_GRP_MEMBERSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_GRP_MEMBERSNull() {
                this[this.tableMOM_GRP_USR.MOM_GRP_MEMBERSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEMBERSNull() {
                return this.IsNull(this.tableMOM_GRP_USR.MEMBERSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEMBERSNull() {
                this[this.tableMOM_GRP_USR.MEMBERSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableMOM_GRP_USR.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableMOM_GRP_USR.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_BLGRow : global::System.Data.DataRow {
            
            private MOM_BLGDataTable tableMOM_BLG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_BLGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_BLG = ((MOM_BLGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_BLG.IDColumn]));
                }
                set {
                    this[this.tableMOM_BLG.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_BLG.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TITLE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_BLG.TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TITLE\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLOG {
                get {
                    try {
                        return ((string)(this[this.tableMOM_BLG.BLOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOG\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.BLOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAGS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_BLG.TAGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAGS\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.TAGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRIVACY {
                get {
                    try {
                        return ((string)(this[this.tableMOM_BLG.PRIVACYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIVACY\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.PRIVACYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ALLOW_COMMENTS {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_BLG.ALLOW_COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ALLOW_COMMENTS\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.ALLOW_COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EMAIL_STATUS {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_BLG.EMAIL_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL_STATUS\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.EMAIL_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_BLG.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ABUSE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_BLG.ABUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABUSE\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.ABUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VIEWS {
                get {
                    try {
                        return ((int)(this[this.tableMOM_BLG.VIEWSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIEWS\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.VIEWSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RATE {
                get {
                    try {
                        return ((short)(this[this.tableMOM_BLG.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'MOM_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_BLG.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_BLG.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_BLG.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTITLENull() {
                return this.IsNull(this.tableMOM_BLG.TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTITLENull() {
                this[this.tableMOM_BLG.TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOGNull() {
                return this.IsNull(this.tableMOM_BLG.BLOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOGNull() {
                this[this.tableMOM_BLG.BLOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAGSNull() {
                return this.IsNull(this.tableMOM_BLG.TAGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAGSNull() {
                this[this.tableMOM_BLG.TAGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRIVACYNull() {
                return this.IsNull(this.tableMOM_BLG.PRIVACYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRIVACYNull() {
                this[this.tableMOM_BLG.PRIVACYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALLOW_COMMENTSNull() {
                return this.IsNull(this.tableMOM_BLG.ALLOW_COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALLOW_COMMENTSNull() {
                this[this.tableMOM_BLG.ALLOW_COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL_STATUSNull() {
                return this.IsNull(this.tableMOM_BLG.EMAIL_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL_STATUSNull() {
                this[this.tableMOM_BLG.EMAIL_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_BLG.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_BLG.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABUSENull() {
                return this.IsNull(this.tableMOM_BLG.ABUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABUSENull() {
                this[this.tableMOM_BLG.ABUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVIEWSNull() {
                return this.IsNull(this.tableMOM_BLG.VIEWSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVIEWSNull() {
                this[this.tableMOM_BLG.VIEWSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATENull() {
                return this.IsNull(this.tableMOM_BLG.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATENull() {
                this[this.tableMOM_BLG.RATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_USR_BLGRow : global::System.Data.DataRow {
            
            private MOM_USR_BLGDataTable tableMOM_USR_BLG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_BLGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_USR_BLG = ((MOM_USR_BLGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_USR_BLG.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'MOM_USR_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_BLG.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TITLE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_BLG.TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TITLE\' in table \'MOM_USR_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_BLG.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLOG {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_BLG.BLOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLOG\' in table \'MOM_USR_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_BLG.BLOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_BLG.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_USR_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_BLG.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_BLG.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'MOM_USR_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_BLG.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_USR_BLG.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_USR_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_BLG.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_BLG.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_USR_BLG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_BLG.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableMOM_USR_BLG.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableMOM_USR_BLG.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTITLENull() {
                return this.IsNull(this.tableMOM_USR_BLG.TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTITLENull() {
                this[this.tableMOM_USR_BLG.TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOGNull() {
                return this.IsNull(this.tableMOM_USR_BLG.BLOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOGNull() {
                this[this.tableMOM_USR_BLG.BLOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_USR_BLG.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_USR_BLG.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATENull() {
                return this.IsNull(this.tableMOM_USR_BLG.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATENull() {
                this[this.tableMOM_USR_BLG.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_USR_BLG.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_USR_BLG.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_USR_BLG.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_USR_BLG.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_USR_FRNDRow : global::System.Data.DataRow {
            
            private MOM_USR_FRNDDataTable tableMOM_USR_FRND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_USR_FRNDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_USR_FRND = ((MOM_USR_FRNDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_USR_FRND.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_USR_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_FRND.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICTURE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_FRND.PICTUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICTURE\' in table \'MOM_USR_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_FRND.PICTUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISPLAY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_FRND.DISPLAY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPLAY_NAME\' in table \'MOM_USR_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_FRND.DISPLAY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FULL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_FRND.FULL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FULL_NAME\' in table \'MOM_USR_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_FRND.FULL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableMOM_USR_FRND.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'MOM_USR_FRND\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_USR_FRND.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_USR_FRND.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_USR_FRND.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICTURENull() {
                return this.IsNull(this.tableMOM_USR_FRND.PICTUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICTURENull() {
                this[this.tableMOM_USR_FRND.PICTUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISPLAY_NAMENull() {
                return this.IsNull(this.tableMOM_USR_FRND.DISPLAY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISPLAY_NAMENull() {
                this[this.tableMOM_USR_FRND.DISPLAY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFULL_NAMENull() {
                return this.IsNull(this.tableMOM_USR_FRND.FULL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFULL_NAMENull() {
                this[this.tableMOM_USR_FRND.FULL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableMOM_USR_FRND.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableMOM_USR_FRND.IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_RCPRow : global::System.Data.DataRow {
            
            private MOM_RCPDataTable tableMOM_RCP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_RCP = ((MOM_RCPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_RCP.IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    return ((string)(this[this.tableMOM_RCP.NAMEColumn]));
                }
                set {
                    this[this.tableMOM_RCP.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHOTO {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP.PHOTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHOTO\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.PHOTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAGS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP.TAGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAGS\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.TAGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREP_TM {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP.PREP_TMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREP_TM\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.PREP_TMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COOK_TM {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP.COOK_TMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COOK_TM\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.COOK_TMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVE_TO {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP.SERVE_TOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVE_TO\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.SERVE_TOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIFFICULTY {
                get {
                    return ((string)(this[this.tableMOM_RCP.DIFFICULTYColumn]));
                }
                set {
                    this[this.tableMOM_RCP.DIFFICULTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INGREDIENTS {
                get {
                    return ((string)(this[this.tableMOM_RCP.INGREDIENTSColumn]));
                }
                set {
                    this[this.tableMOM_RCP.INGREDIENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string METHOD {
                get {
                    return ((string)(this[this.tableMOM_RCP.METHODColumn]));
                }
                set {
                    this[this.tableMOM_RCP.METHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VEGE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_RCP.VEGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VEGE\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.VEGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VEGAN {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_RCP.VEGANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VEGAN\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.VEGANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DAIRY {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_RCP.DAIRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAIRY\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.DAIRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GLUTEN {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_RCP.GLUTENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLUTEN\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.GLUTENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NUT {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_RCP.NUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUT\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.NUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ALLOW {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_RCP.ALLOWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ALLOW\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.ALLOWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_RCP.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_RCP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    return ((global::System.DateTime)(this[this.tableMOM_RCP.TIMEColumn]));
                }
                set {
                    this[this.tableMOM_RCP.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableMOM_RCP.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableMOM_RCP.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHOTONull() {
                return this.IsNull(this.tableMOM_RCP.PHOTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHOTONull() {
                this[this.tableMOM_RCP.PHOTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAGSNull() {
                return this.IsNull(this.tableMOM_RCP.TAGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAGSNull() {
                this[this.tableMOM_RCP.TAGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREP_TMNull() {
                return this.IsNull(this.tableMOM_RCP.PREP_TMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREP_TMNull() {
                this[this.tableMOM_RCP.PREP_TMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOOK_TMNull() {
                return this.IsNull(this.tableMOM_RCP.COOK_TMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOOK_TMNull() {
                this[this.tableMOM_RCP.COOK_TMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVE_TONull() {
                return this.IsNull(this.tableMOM_RCP.SERVE_TOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVE_TONull() {
                this[this.tableMOM_RCP.SERVE_TOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVEGENull() {
                return this.IsNull(this.tableMOM_RCP.VEGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVEGENull() {
                this[this.tableMOM_RCP.VEGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVEGANNull() {
                return this.IsNull(this.tableMOM_RCP.VEGANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVEGANNull() {
                this[this.tableMOM_RCP.VEGANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAIRYNull() {
                return this.IsNull(this.tableMOM_RCP.DAIRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAIRYNull() {
                this[this.tableMOM_RCP.DAIRYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLUTENNull() {
                return this.IsNull(this.tableMOM_RCP.GLUTENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLUTENNull() {
                this[this.tableMOM_RCP.GLUTENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUTNull() {
                return this.IsNull(this.tableMOM_RCP.NUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUTNull() {
                this[this.tableMOM_RCP.NUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALLOWNull() {
                return this.IsNull(this.tableMOM_RCP.ALLOWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALLOWNull() {
                this[this.tableMOM_RCP.ALLOWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_RCP.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_RCP.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_RCP_CMTRow : global::System.Data.DataRow {
            
            private MOM_RCP_CMTDataTable tableMOM_RCP_CMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_CMTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_RCP_CMT = ((MOM_RCP_CMTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_RCP_CMT.IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_CMT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_RCP_ID {
                get {
                    return ((int)(this[this.tableMOM_RCP_CMT.MOM_RCP_IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_CMT.MOM_RCP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    return ((long)(this[this.tableMOM_RCP_CMT.MOM_USR_IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_CMT.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMENTS {
                get {
                    return ((string)(this[this.tableMOM_RCP_CMT.COMMENTSColumn]));
                }
                set {
                    this[this.tableMOM_RCP_CMT.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    return ((global::System.DateTime)(this[this.tableMOM_RCP_CMT.TIMEColumn]));
                }
                set {
                    this[this.tableMOM_RCP_CMT.TIMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_RCP_RTRow : global::System.Data.DataRow {
            
            private MOM_RCP_RTDataTable tableMOM_RCP_RT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_RTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_RCP_RT = ((MOM_RCP_RTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_RCP_RT.IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_RT.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_RCP_ID {
                get {
                    return ((int)(this[this.tableMOM_RCP_RT.MOM_RCP_IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_RT.MOM_RCP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    return ((long)(this[this.tableMOM_RCP_RT.MOM_USR_IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_RT.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RATE {
                get {
                    return ((int)(this[this.tableMOM_RCP_RT.RATEColumn]));
                }
                set {
                    this[this.tableMOM_RCP_RT.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    return ((global::System.DateTime)(this[this.tableMOM_RCP_RT.TIMEColumn]));
                }
                set {
                    this[this.tableMOM_RCP_RT.TIMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_RCP_VIEWRow : global::System.Data.DataRow {
            
            private MOM_RCP_VIEWDataTable tableMOM_RCP_VIEW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_VIEWRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_RCP_VIEW = ((MOM_RCP_VIEWDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_RCP_VIEW.IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_VIEW.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_RCP_ID {
                get {
                    return ((int)(this[this.tableMOM_RCP_VIEW.MOM_RCP_IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_VIEW.MOM_RCP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    return ((long)(this[this.tableMOM_RCP_VIEW.MOM_USR_IDColumn]));
                }
                set {
                    this[this.tableMOM_RCP_VIEW.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    return ((global::System.DateTime)(this[this.tableMOM_RCP_VIEW.TIMEColumn]));
                }
                set {
                    this[this.tableMOM_RCP_VIEW.TIMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_FRGRow : global::System.Data.DataRow {
            
            private MOM_FRGDataTable tableMOM_FRG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FRGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_FRG = ((MOM_FRGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_FRG.IDColumn]));
                }
                set {
                    this[this.tableMOM_FRG.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMOM_FRG.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_FRG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHARE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG.SHAREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARE\' in table \'MOM_FRG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG.SHAREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'MOM_FRG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_SHARE {
                get {
                    try {
                        return ((string)(this[this.tableMOM_FRG.TYPE_SHAREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_SHARE\' in table \'MOM_FRG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG.TYPE_SHAREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOM_FRG.TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIME\' in table \'MOM_FRG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG.TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HIDE {
                get {
                    try {
                        return ((bool)(this[this.tableMOM_FRG.HIDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIDE\' in table \'MOM_FRG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_FRG.HIDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_FRG.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_FRG.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHARENull() {
                return this.IsNull(this.tableMOM_FRG.SHAREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHARENull() {
                this[this.tableMOM_FRG.SHAREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tableMOM_FRG.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tableMOM_FRG.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_SHARENull() {
                return this.IsNull(this.tableMOM_FRG.TYPE_SHAREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_SHARENull() {
                this[this.tableMOM_FRG.TYPE_SHAREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMENull() {
                return this.IsNull(this.tableMOM_FRG.TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMENull() {
                this[this.tableMOM_FRG.TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIDENull() {
                return this.IsNull(this.tableMOM_FRG.HIDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIDENull() {
                this[this.tableMOM_FRG.HIDEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_FAV_RCPRow : global::System.Data.DataRow {
            
            private MOM_FAV_RCPDataTable tableMOM_FAV_RCP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_FAV_RCPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_FAV_RCP = ((MOM_FAV_RCPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMOM_FAV_RCP.IDColumn]));
                }
                set {
                    this[this.tableMOM_FAV_RCP.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOM_RCP_ID {
                get {
                    return ((int)(this[this.tableMOM_FAV_RCP.MOM_RCP_IDColumn]));
                }
                set {
                    this[this.tableMOM_FAV_RCP.MOM_RCP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MOM_USR_ID {
                get {
                    return ((long)(this[this.tableMOM_FAV_RCP.MOM_USR_IDColumn]));
                }
                set {
                    this[this.tableMOM_FAV_RCP.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIME {
                get {
                    return ((global::System.DateTime)(this[this.tableMOM_FAV_RCP.TIMEColumn]));
                }
                set {
                    this[this.tableMOM_FAV_RCP.TIMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOM_RCP_SEARCHRow : global::System.Data.DataRow {
            
            private MOM_RCP_SEARCHDataTable tableMOM_RCP_SEARCH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOM_RCP_SEARCHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOM_RCP_SEARCH = ((MOM_RCP_SEARCHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableMOM_RCP_SEARCH.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHOTO {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.PHOTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHOTO\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.PHOTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COOKINGTIME {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.COOKINGTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COOKINGTIME\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.COOKINGTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOM_USR_ID {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.MOM_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOM_USR_ID\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.MOM_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUBMITTEDBY {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.SUBMITTEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBMITTEDBY\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.SUBMITTEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VIEWS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.VIEWSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIEWS\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.VIEWSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMENTS\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATING {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.RATINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATING\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.RATINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATINGS {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.RATINGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATINGS\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.RATINGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATINGPHOTO {
                get {
                    try {
                        return ((string)(this[this.tableMOM_RCP_SEARCH.RATINGPHOTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATINGPHOTO\' in table \'MOM_RCP_SEARCH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOM_RCP_SEARCH.RATINGPHOTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableMOM_RCP_SEARCH.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableMOM_RCP_SEARCH.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableMOM_RCP_SEARCH.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHOTONull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.PHOTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHOTONull() {
                this[this.tableMOM_RCP_SEARCH.PHOTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOOKINGTIMENull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.COOKINGTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOOKINGTIMENull() {
                this[this.tableMOM_RCP_SEARCH.COOKINGTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOM_USR_IDNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.MOM_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOM_USR_IDNull() {
                this[this.tableMOM_RCP_SEARCH.MOM_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUBMITTEDBYNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.SUBMITTEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUBMITTEDBYNull() {
                this[this.tableMOM_RCP_SEARCH.SUBMITTEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVIEWSNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.VIEWSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVIEWSNull() {
                this[this.tableMOM_RCP_SEARCH.VIEWSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMENTSNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMENTSNull() {
                this[this.tableMOM_RCP_SEARCH.COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATINGNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.RATINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATINGNull() {
                this[this.tableMOM_RCP_SEARCH.RATINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATINGSNull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.RATINGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATINGSNull() {
                this[this.tableMOM_RCP_SEARCH.RATINGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATINGPHOTONull() {
                return this.IsNull(this.tableMOM_RCP_SEARCH.RATINGPHOTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATINGPHOTONull() {
                this[this.tableMOM_RCP_SEARCH.RATINGPHOTOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_USRRowChangeEvent : global::System.EventArgs {
            
            private MOM_USRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USRRowChangeEvent(MOM_USRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_FRND_RQSTRowChangeEvent : global::System.EventArgs {
            
            private MOM_FRND_RQSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRND_RQSTRowChangeEvent(MOM_FRND_RQSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRND_RQSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_FRNDRowChangeEvent : global::System.EventArgs {
            
            private MOM_FRNDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRNDRowChangeEvent(MOM_FRNDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRNDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_ANWSRowChangeEvent : global::System.EventArgs {
            
            private MOM_ANWSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_ANWSRowChangeEvent(MOM_ANWSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_ANWSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_CATGRowChangeEvent : global::System.EventArgs {
            
            private MOM_CATGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_CATGRowChangeEvent(MOM_CATGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_CATGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_USR_QSTNRowChangeEvent : global::System.EventArgs {
            
            private MOM_USR_QSTNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_QSTNRowChangeEvent(MOM_USR_QSTNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_QSTNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_USR_ANWSRowChangeEvent : global::System.EventArgs {
            
            private MOM_USR_ANWSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_ANWSRowChangeEvent(MOM_USR_ANWSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_ANWSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_QSTNRowChangeEvent : global::System.EventArgs {
            
            private MOM_QSTNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_QSTNRowChangeEvent(MOM_QSTNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_QSTNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_IP_TRKRowChangeEvent : global::System.EventArgs {
            
            private MOM_IP_TRKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IP_TRKRowChangeEvent(MOM_IP_TRKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IP_TRKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_FRG_SHAREDRowChangeEvent : global::System.EventArgs {
            
            private MOM_FRG_SHAREDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_SHAREDRowChangeEvent(MOM_FRG_SHAREDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_SHAREDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_FRG_CMNTRowChangeEvent : global::System.EventArgs {
            
            private MOM_FRG_CMNTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNTRowChangeEvent(MOM_FRG_CMNTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_FRG_CMNT_SHAREDRowChangeEvent : global::System.EventArgs {
            
            private MOM_FRG_CMNT_SHAREDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNT_SHAREDRowChangeEvent(MOM_FRG_CMNT_SHAREDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRG_CMNT_SHAREDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_IMPT_EMAILRowChangeEvent : global::System.EventArgs {
            
            private MOM_IMPT_EMAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IMPT_EMAILRowChangeEvent(MOM_IMPT_EMAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_IMPT_EMAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_GRPRowChangeEvent : global::System.EventArgs {
            
            private MOM_GRPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRPRowChangeEvent(MOM_GRPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_GRP_USRRowChangeEvent : global::System.EventArgs {
            
            private MOM_GRP_USRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRP_USRRowChangeEvent(MOM_GRP_USRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_GRP_USRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_BLGRowChangeEvent : global::System.EventArgs {
            
            private MOM_BLGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_BLGRowChangeEvent(MOM_BLGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_BLGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_USR_BLGRowChangeEvent : global::System.EventArgs {
            
            private MOM_USR_BLGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_BLGRowChangeEvent(MOM_USR_BLGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_BLGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_USR_FRNDRowChangeEvent : global::System.EventArgs {
            
            private MOM_USR_FRNDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_FRNDRowChangeEvent(MOM_USR_FRNDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_USR_FRNDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_RCPRowChangeEvent : global::System.EventArgs {
            
            private MOM_RCPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCPRowChangeEvent(MOM_RCPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_RCP_CMTRowChangeEvent : global::System.EventArgs {
            
            private MOM_RCP_CMTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_CMTRowChangeEvent(MOM_RCP_CMTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_CMTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_RCP_RTRowChangeEvent : global::System.EventArgs {
            
            private MOM_RCP_RTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_RTRowChangeEvent(MOM_RCP_RTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_RTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_RCP_VIEWRowChangeEvent : global::System.EventArgs {
            
            private MOM_RCP_VIEWRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_VIEWRowChangeEvent(MOM_RCP_VIEWRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_VIEWRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_FRGRowChangeEvent : global::System.EventArgs {
            
            private MOM_FRGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRGRowChangeEvent(MOM_FRGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FRGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_FAV_RCPRowChangeEvent : global::System.EventArgs {
            
            private MOM_FAV_RCPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FAV_RCPRowChangeEvent(MOM_FAV_RCPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_FAV_RCPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOM_RCP_SEARCHRowChangeEvent : global::System.EventArgs {
            
            private MOM_RCP_SEARCHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_SEARCHRowChangeEvent(MOM_RCP_SEARCHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOM_RCP_SEARCHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591